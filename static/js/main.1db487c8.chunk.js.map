{"version":3,"sources":["components/page/OldVersionLinkButton.tsx","components/page/PageAppBar.tsx","components/page/DrawerItemsWithScrollspy.tsx","components/page/ResponsivePageDrawer.tsx","components/page/PageMain.tsx","components/page/PortfolioPage.tsx","utils/cssUtils.tsx","components/common/Section.tsx","components/about/AboutInformation.tsx","components/about/AboutPanel.tsx","components/portfolio/PortfoliosPanel.tsx","components/contact/ContactIcon.tsx","components/contact/ContactPanel.tsx","services/portfolio/CodePenItemContentExtractor.ts","services/portfolio/CodePenItemContentParser.ts","components/portfolio/EmbeddedPenPortfolio.tsx","components/portfolio/EmbeddedPenPortfolios.tsx","metadata/sectionConfigs.tsx","components/portfolio/EmbeddedPenPortfoliosFactory.tsx","services/portfolio/LocalCodePenRssFeedsParser.ts","services/MuiThemeFactory.ts","services/GoogleAnalyticsManager.ts","components/App.tsx","serviceWorker.js","index.tsx"],"names":["withStyles","theme","createStyles","props","Button","href","variant","color","appBar","zIndex","drawer","breakpoints","down","modal","title","flexGrow","textAlign","menuButton","marginRight","up","display","classes","AppBar","position","className","Toolbar","IconButton","aria-label","onClick","onIconButtonClick","Typography","noWrap","classNames","Hidden","smDown","root","width","flexShrink","drawerPaper","content","padding","spacing","toolbar","mixins","scrollSpyList","margin","scrollSpyListItem","oldVersionLinkButton","items","Fragment","currentClassName","map","text","index","key","item","replace","toLowerCase","ListItem","button","ListItemIcon","ListItemText","primary","mdUp","ResponsivePageDrawer","Component","render","this","sectionConfigs","Drawer","anchor","direction","open","drawerOpen","onClose","onDrawerClose","paper","drawerContent","asItems","versionText","VersionText","config","name","version","process","left","bottom","withTheme","component","Divider","PortfolioPage","state","handleDrawerToggle","setState","CssBaseline","main","getStylesToFixPageHeaderOverlappingInPageAnchorIssue","minHeight","getPaddingTopForSection","paddingTop","marginTop","Section","id","subtitle","hasDivider","children","section","header","optionalTypography","optionalTitle","optionalSubtitle","optionalDivider","body","paragraph","defaultProps","overflowX","table","height","row","palette","secondary","contrastText","divider","backgroundColor","light","Paper","Table","TableHead","dividerRow","TableBody","informationMetadatas","group","i","entry","j","TableRow","TableCell","scope","align","value","PortfoliosPanel","React","constructor","super","portfolios","componentDidMount","portfoliosFactory","createPortfolios","then","portfolio","icon","iconImg","maxHeight","maxWidth","metadata","cappedIconSize","target","rel","src","img","alt","Icons","smUp","contactIcons","iconMetadatas","xsDown","Badges","badgeMicroMetadatas","badgeMetadatas","metadatas","toString","ImageType","LinkType","icons","flexFlow","justifyContent","alignItems","badges","CodePenItemContentParser","$","rawContent","cheerio","load","parseContent","extractor","extract","credentialsExtractor","firstLink","parts","URL","attribs","pathname","split","user","hash","MAPPING_HEIGHTS","xs","sm","md","lg","xl","withWidth","embeddedContainer","isScriptLoaded","newParser","getHeight","loader","CircularProgress","defaultTab","shouldLoadScript","overrideAsLoaded","EmbeddedPenPortfolios","scriptTagBuilder","loaded","CodepenEmbedScriptTagBuilder","setAsync","withOnLoadHandler","withOnErrorHandler","error","parser","parseUrl","rssFeedUrl","appendTo","document","catch","console","log","link","factory","Promise","resolve","rssParser","rssFeeds","rssFeedsContent","parseString","output","Error","RssParser","createMuiTheme","indigo","typography","overrides","MuiTableRow","head","GoogleAnalyticsManager","_isInitialized","init","isGoogleAnalyticsTrackingEnabled","isTrue","testMode","REACT_APP_REACT_GA_TEST_MODE","ReactGA","initialize","pageview","path","isInitialized","warn","optionalString","App","context","gAManager","window","location","search","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","getElementById","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.1db487c8.chunk.js","sourcesContent":["import React from 'react';\nimport {Theme, withStyles} from '@material-ui/core/styles';\nimport {createStyles, WithStyles} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\n\nconst styles = (theme: Theme) => createStyles({});\n\ninterface OldVersionLinkButtonProps extends WithStyles<typeof styles> {\n}\n\nconst OLD_VERSION_URL = \"https://codepen.io/htbkoo/\";\n\nfunction OldVersionLinkButton(props: OldVersionLinkButtonProps) {\n    return (\n        <Button href={OLD_VERSION_URL} variant=\"contained\" color=\"inherit\">\n            View on CodePen\n        </Button>\n    );\n}\n\nexport default withStyles(styles)(OldVersionLinkButton);","import React from 'react';\nimport {Theme, withStyles} from '@material-ui/core/styles';\nimport {createStyles, WithStyles} from '@material-ui/core';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport classNames from \"classnames\";\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport OldVersionLinkButton from \"./OldVersionLinkButton\";\n\nconst styles = (theme: Theme) => createStyles({\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        [theme.breakpoints.down('sm')]: {\n            zIndex: theme.zIndex.modal + 1,\n        },\n    },\n    title: {\n        flexGrow: 1,\n        textAlign: \"left\",\n    },\n    menuButton: {\n        marginRight: 20,\n        [theme.breakpoints.up('md')]: {\n            display: 'none',\n        },\n    },\n});\n\ninterface PageAppBarProps extends WithStyles<typeof styles> {\n    onIconButtonClick: () => void\n}\n\nfunction PageAppBar(props: PageAppBarProps) {\n    const {classes} = props;\n\n    return (\n        <AppBar position=\"fixed\" className={classes.appBar}>\n            <Toolbar>\n                <IconButton\n                    color=\"inherit\"\n                    aria-label=\"Open drawer\"\n                    onClick={props.onIconButtonClick}\n                    className={classes.menuButton}\n                >\n                    <MenuIcon/>\n                </IconButton>\n                <Typography variant=\"h6\" color=\"inherit\" noWrap className={classNames(classes.title)}>\n                    Hey's Personal Portfolio\n                </Typography>\n                <Hidden smDown>\n                    <OldVersionLinkButton/>\n                </Hidden>\n            </Toolbar>\n        </AppBar>\n    );\n}\n\nexport default withStyles(styles)(PageAppBar);","import React from 'react';\nimport {Theme, withStyles} from '@material-ui/core/styles';\nimport {createStyles, WithStyles} from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport Scrollspy from 'react-scrollspy';\nimport Hidden from '@material-ui/core/Hidden';\n\nimport OldVersionLinkButton from \"./OldVersionLinkButton\";\n\nconst drawerWidth = 240;\n\nconst styles = (theme: Theme) => createStyles({\n    root: {\n        display: 'flex',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n    toolbar: theme.mixins.toolbar,\n    scrollSpyList: {\n        margin: 0,\n        padding: 0\n    },\n    scrollSpyListItem: {\n        display: 'flex',\n    },\n    oldVersionLinkButton: {\n        margin: \"5%\"\n    }\n});\n\ninterface DrawerItemsWithScrollspyProps extends WithStyles<typeof styles> {\n    items: string[],\n}\n\nfunction DrawerItemsWithScrollspy(props: DrawerItemsWithScrollspyProps) {\n    const {items, classes} = props;\n\n    return (\n        <React.Fragment>\n            <Scrollspy\n                items={items}\n                currentClassName=\"is-current\"\n                className={classes.scrollSpyList}\n            >\n                {items.map((text, index) => (\n                    <a key={text} href={itemToHref(text)} className={classes.scrollSpyListItem}>\n                        <ListItem button>\n                            <ListItemIcon>{index % 2 === 0 ? <InboxIcon/> : <MailIcon/>}</ListItemIcon>\n                            <ListItemText primary={text}/>\n                        </ListItem>\n                    </a>\n                ))}\n            </Scrollspy>\n            <Hidden mdUp>\n                <div className={classes.oldVersionLinkButton}>\n                    <OldVersionLinkButton/>\n                </div>\n            </Hidden>\n        </React.Fragment>\n    );\n}\n\nfunction itemToHref(item: string): string {\n    return `#${item.replace(/ /g, \"-\").toLowerCase()}`;\n}\n\nexport default withStyles(styles)(DrawerItemsWithScrollspy);\n","import React, { Component } from 'react';\nimport { Theme, withStyles } from '@material-ui/core/styles';\nimport { createStyles, WithStyles } from '@material-ui/core';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\n\nimport DrawerItemsWithScrollspy from \"./DrawerItemsWithScrollspy\";\nimport SectionMetadata from \"../../model/SectionMetadata\";\nimport { version } from \"../../../package.json\"\n\nconst drawerWidth = 240;\n\nconst styles = (theme: Theme) => createStyles({\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    toolbar: theme.mixins.toolbar,\n    versionText: {\n        position: \"absolute\",\n        left: \"16px\",\n        bottom: \"16px\",\n    }\n});\n\ninterface ResponsivePageDrawerProps extends WithStyles<typeof styles, true> {\n    sectionConfigs: SectionMetadata[],\n    drawerOpen: boolean,\n    onDrawerClose: () => void\n}\n\nclass ResponsivePageDrawer extends Component<ResponsivePageDrawerProps> {\n    render() {\n        const { classes, sectionConfigs, theme } = this.props;\n\n        return (\n            <React.Fragment>\n                {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n                <Hidden mdUp>\n                    <Drawer\n                        variant=\"temporary\"\n                        anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n                        open={this.props.drawerOpen}\n                        onClose={this.props.onDrawerClose}\n                        classes={{\n                            paper: classes.drawerPaper,\n                        }}\n                    >\n                        {drawerContent()}\n                    </Drawer>\n                </Hidden>\n                <Hidden smDown>\n                    <Drawer\n                        classes={{\n                            paper: classes.drawerPaper,\n                        }}\n                        variant=\"permanent\"\n                        open\n                    >\n                        {drawerContent()}\n                    </Drawer>\n                </Hidden>\n            </React.Fragment>\n        );\n\n        function drawerContent() {\n            return (\n                <React.Fragment>\n                    <div className={classes.toolbar}/>\n                    <DrawerItemsWithScrollspy items={asItems(sectionConfigs)}/>\n                    <div className={classes.versionText}>\n                        <VersionText/>\n                    </div>\n                </React.Fragment>\n            )\n        }\n    }\n}\n\n\nfunction asItems(sectionConfigs: SectionMetadata[]): string[] {\n    return sectionConfigs.map(config => config.name);\n}\n\nfunction VersionText() {\n    return <div>v{version}-{process.env.REACT_APP_GIT_SHA}</div>\n}\n\nexport default withStyles(styles, { withTheme: true })(ResponsivePageDrawer);\n","import React from 'react';\nimport {Theme, withStyles} from '@material-ui/core/styles';\nimport {createStyles, WithStyles} from '@material-ui/core';\nimport Divider from '@material-ui/core/Divider';\nimport SectionMetadata from \"../../model/SectionMetadata\";\n\nconst styles = (theme: Theme) => createStyles({\n    root: {\n        display: 'flex',\n    },\n    content: {\n        flexGrow: 1,\n        [theme.breakpoints.down('xs')]: {\n            padding: \"unset\"\n        },\n        [theme.breakpoints.up('sm')]: {\n            padding: theme.spacing(3)\n        },\n    },\n    toolbar: theme.mixins.toolbar,\n});\n\ninterface PageMainProps extends WithStyles<typeof styles> {\n    sectionConfigs: SectionMetadata[]\n}\n\nfunction PageMain(props: PageMainProps) {\n    const {classes, sectionConfigs} = props;\n\n    return (\n        <main className={classes.content}>\n            <div className={classes.toolbar}/>\n\n            {sectionConfigs.map(config => (\n                <div key={config.name}>\n                    {config.component}\n                    <Divider/>\n                </div>\n            ))}\n        </main>\n    );\n}\n\nexport default withStyles(styles)(PageMain);\n","import React, { Component } from 'react';\nimport { Theme, withStyles } from '@material-ui/core/styles';\nimport { createStyles, WithStyles } from '@material-ui/core';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport PageAppBar from \"./PageAppBar\";\nimport PageDrawer from \"./ResponsivePageDrawer\";\nimport PageMain from \"./PageMain\";\nimport SectionMetadata from \"../../model/SectionMetadata\";\n\nconst drawerWidth = 240;\n\nconst styles = (theme: Theme) => createStyles({\n    root: {\n        display: 'flex',\n    },\n    drawer: {\n        [theme.breakpoints.up('md')]: {\n            width: drawerWidth,\n            flexShrink: 0,\n        },\n    },\n    main: {\n        width: \"100%\"\n    }\n});\n\ninterface PortfolioPageProps extends WithStyles<typeof styles> {\n    sectionConfigs: SectionMetadata[]\n}\n\n\ninterface PortfolioPageState {\n    drawerOpen: boolean\n}\n\nclass PortfolioPage extends Component<PortfolioPageProps, PortfolioPageState> {\n    state = { drawerOpen: false };\n\n    private handleDrawerToggle = () => this.setState(state => ({ drawerOpen: !state.drawerOpen }));\n\n    render() {\n        const { classes, sectionConfigs } = this.props;\n\n        return (\n            <div className={classes.root}>\n                <CssBaseline/>\n                <div>\n                    <PageAppBar onIconButtonClick={this.handleDrawerToggle}/>\n                </div>\n                <nav className={classes.drawer}>\n                    <PageDrawer\n                        sectionConfigs={sectionConfigs}\n                        drawerOpen={this.state.drawerOpen}\n                        onDrawerClose={this.handleDrawerToggle}\n                    />\n                </nav>\n                <div className={classes.main}>\n                    <PageMain sectionConfigs={sectionConfigs}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(PortfolioPage);\n","import { Theme } from \"@material-ui/core\";\n\nexport function getStylesToFixPageHeaderOverlappingInPageAnchorIssue(theme: Theme) {\n    // To fix the AppBar overlapping in-page anchors issue\n    // Reference: https://stackoverflow.com/a/13117744\n    const padding = getPaddingTopForSection(theme);\n    return {\n        paddingTop: padding,\n        marginTop: -padding,\n    };\n}\n\nfunction getPaddingTopForSection(theme: Theme): string | number {\n    const minHeight = theme.mixins.toolbar.minHeight;\n    if (minHeight) {\n        if (typeof minHeight === \"number\") {\n            return theme.spacing(3) + minHeight;\n        } else {\n            return minHeight;\n        }\n    } else {\n        return theme.spacing(3);\n    }\n}\n","import * as React from \"react\";\nimport { FunctionComponent } from \"react\";\nimport { createStyles, Theme, TypographyTypeMap, withStyles, WithStyles } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\n\nimport { getStylesToFixPageHeaderOverlappingInPageAnchorIssue } from \"../../utils/cssUtils\";\n\nconst styles = (theme: Theme) =>\n    createStyles({\n        section: {\n            padding: theme.spacing(3),\n            ...getStylesToFixPageHeaderOverlappingInPageAnchorIssue(theme),\n        },\n        header: {},\n        body: {},\n    });\n\ninterface SectionProps extends WithStyles<typeof styles> {\n    id: string,\n    title?: string,\n    subtitle?: string,\n    hasDivider?: boolean,\n}\n\nconst Section: FunctionComponent<SectionProps> = ({id, title, subtitle, hasDivider, children, classes}) => (\n    <div id={id} className={classes.section}>\n        <div className={classes.header}>\n            {optionalTitle(title)}\n            {optionalSubtitle(subtitle)}\n        </div>\n        {optionalDivider(hasDivider)}\n        <div className={classes.body}>\n            {children}\n        </div>\n    </div>\n);\n\nfunction optionalTitle(title?: string) {\n    return optionalTypography({text: title, variant: \"h3\"});\n}\n\nfunction optionalSubtitle(subtitle?: string) {\n    return optionalTypography({text: subtitle, variant: \"h5\"});\n}\n\nfunction optionalTypography({text, variant}: { text?: string, variant: TypographyTypeMap[\"props\"][\"variant\"] }) {\n    return text\n        ? <Typography variant={variant} paragraph>{text}</Typography>\n        : \"\";\n}\n\nfunction optionalDivider(hasDivider?: boolean) {\n    return hasDivider\n        ? <Divider/>\n        : \"\";\n}\n\nSection.defaultProps = {\n    hasDivider: false\n};\n\nexport default withStyles(styles)(Section);\n","import * as React from \"react\";\nimport {createStyles, Theme, withStyles, WithStyles} from \"@material-ui/core\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nimport informationMetadatas from \"../../metadata/about/information.json\";\nimport AboutEntry from \"../../model/AboutEntry\";\n\nconst styles = (theme: Theme) => createStyles({\n    root: {\n        // width: '100%',\n        marginTop: theme.spacing(3),\n        overflowX: 'auto',\n    },\n    table: {\n        height: \"auto\"\n        // minWidth: 700,\n    },\n    row: {\n        color: theme.palette.secondary.contrastText,\n        height: theme.spacing(4),\n    },\n    divider: {\n        backgroundColor: theme.palette.secondary.light,\n        color: theme.palette.secondary.contrastText\n    }\n});\n\ninterface AboutInformationProps extends WithStyles<typeof styles> {\n}\n\nfunction AboutInformation(props: AboutInformationProps) {\n    const {classes} = props;\n    return (\n        <Paper className={classes.root}>\n            <Table className={classes.table}>\n                <TableHead>\n                    {dividerRow()}\n                </TableHead>\n                <TableBody>\n                    {(informationMetadatas as AboutEntry[][]).map(toTableGroups)}\n                </TableBody>\n            </Table>\n        </Paper>\n    );\n\n    function toTableGroups(group: AboutEntry[], i: number) {\n        return (\n            <React.Fragment key={i}>\n                {group.map(toRow)}\n                {dividerRow()}\n            </React.Fragment>\n        );\n\n        function toRow(entry: AboutEntry, j: number) {\n            return (\n                <TableRow key={`${i}_${j}_${entry.key}`} className={classes.row}>\n                    <TableCell component=\"th\" scope=\"row\" align=\"right\">\n                        <strong>{entry.key}</strong>\n                    </TableCell>\n                    <TableCell align=\"left\">\n                        <span>{entry.value}</span>\n                    </TableCell>\n                </TableRow>\n            );\n        }\n    }\n\n    function dividerRow() {\n        return (\n            <TableRow className={classes.divider}>\n                <TableCell/>\n                <TableCell/>\n            </TableRow>\n        );\n    }\n}\n\nexport default withStyles(styles)(AboutInformation);\n\n","import * as React from \"react\";\nimport {createStyles, Theme, withStyles, WithStyles} from \"@material-ui/core\";\n\nimport Section from \"../common/Section\";\nimport AboutInformation from \"./AboutInformation\";\n\nconst styles = (theme: Theme) => createStyles({});\n\ninterface AboutPanelProps extends WithStyles<typeof styles> {\n}\n\nfunction AboutPanel(props: AboutPanelProps) {\n    return (\n        <Section\n            id=\"about\"\n            hasDivider={false}\n            title=\"About\"\n            subtitle=\"Some information about myself\"\n        >\n            <AboutInformation/>\n        </Section>\n    );\n}\n\nexport default withStyles(styles)(AboutPanel);","import * as React from \"react\";\nimport {createStyles, Theme, withStyles, WithStyles} from \"@material-ui/core\";\n\nimport Section from \"../common/Section\";\nimport {PortfoliosFactory} from \"./PortfoliosFactory\";\n\nconst styles = (theme: Theme) => createStyles({\n    portfolio: {\n        margin: \"5%\"\n    }\n});\n\ninterface PortfoliosPanelProps extends WithStyles<typeof styles> {\n    portfoliosFactory: PortfoliosFactory\n}\n\ninterface PortfoliosPanelState {\n    portfolios: React.ReactNode\n}\n\nclass PortfoliosPanel extends React.Component<PortfoliosPanelProps, PortfoliosPanelState> {\n    constructor(props: Readonly<PortfoliosPanelProps>) {\n        super(props);\n\n        this.state = {\n            portfolios: []\n        };\n    }\n\n    componentDidMount(): void {\n        this.props.portfoliosFactory.createPortfolios()\n            .then(portfolios => this.setState({portfolios}))\n    }\n\n    render(): React.ReactNode {\n        return (\n            <Section\n                id=\"portfolio\"\n                hasDivider={true}\n                title=\"Portfolio\"\n                subtitle=\"Some of my previous works\"\n            >\n                <div>\n                    {this.state.portfolios}\n                </div>\n            </Section>\n        );\n    }\n}\n\nexport default withStyles(styles)(PortfoliosPanel);","import * as React from \"react\";\nimport { createStyles, Theme, withStyles, WithStyles } from \"@material-ui/core\";\nimport ContactMetadata from \"../../model/ContactMetadata\";\n\nconst styles = (theme: Theme) =>\n    createStyles({\n        icon: {\n            padding: theme.spacing(2),\n        },\n        iconImg: {\n            maxHeight: theme.spacing(8),\n            maxWidth: theme.spacing(8),\n        },\n    });\n\ninterface ContactIconProps extends WithStyles<typeof styles> {\n    metadata: ContactMetadata;\n    cappedIconSize?: boolean;\n}\n\nfunction ContactIcon({ classes, metadata, cappedIconSize }: ContactIconProps) {\n    return (\n        <div className={classes.icon}>\n            <a href={metadata.href} target=\"_blank\" rel=\"noopener noreferrer\">\n                <img\n                    className={cappedIconSize ? classes.iconImg : \"\"}\n                    src={metadata.img.src}\n                    alt={metadata.img.alt}\n                />\n            </a>\n        </div>\n    );\n}\n\nexport default withStyles(styles)(ContactIcon);\n","import * as React from \"react\";\nimport { createStyles, Theme, withStyles, WithStyles } from \"@material-ui/core\";\nimport Hidden from \"@material-ui/core/Hidden\";\n\nimport ContactIcon from \"./ContactIcon\";\n\nimport iconMetadatas from \"../../metadata/contact/icons.json\";\nimport badgeMetadatas from \"../../metadata/contact/badges.json\";\nimport badgeMicroMetadatas from \"../../metadata/contact/badges_micro.json\";\nimport ContactMetadata from \"../../model/ContactMetadata\";\nimport Section from \"../common/Section\";\n\nconst styles = (theme: Theme) =>\n    createStyles({\n        icons: {\n            padding: theme.spacing(3),\n            display: \"flex\",\n            flexFlow: \"wrap\",\n            justifyContent: \"center\",\n            alignItems: \"baseline\",\n        },\n        badges: {},\n    });\n\ninterface ContactPanelProps extends WithStyles<typeof styles> {}\n\nfunction ContactPanel(props: ContactPanelProps) {\n    const { classes } = props;\n    return (\n        <Section id=\"contact\" hasDivider={true} title=\"Contact\" subtitle=\"Check me out at the following!\">\n            <div className={classes.icons}>\n                <Icons />\n            </div>\n            <div className={classes.badges}>\n                <Badges />\n            </div>\n        </Section>\n    );\n}\n\nfunction Icons() {\n    return (\n        <React.Fragment>\n            <Hidden smUp>{contactIcons(iconMetadatas, true)}</Hidden>\n            <Hidden xsDown>{contactIcons(iconMetadatas)}</Hidden>\n        </React.Fragment>\n    );\n}\n\nfunction Badges() {\n    return (\n        <React.Fragment>\n            <Hidden smUp>{contactIcons(badgeMicroMetadatas)}</Hidden>\n            <Hidden xsDown>{contactIcons(badgeMetadatas)}</Hidden>\n        </React.Fragment>\n    );\n}\n\nfunction contactIcons(metadatas: ContactMetadata[], cappedIconSize: boolean = false) {\n    return metadatas.map((metadata, i) => (\n        <ContactIcon\n            key={`${i.toString()}_${metadata.img.alt}`}\n            metadata={metadata}\n            cappedIconSize={cappedIconSize}\n        />\n    ));\n}\n\nexport default withStyles(styles)(ContactPanel);\n","enum ImageType {\n    screenshot = \"screenshot\"\n}\n\nenum LinkType {\n    pen = \"code\", full = \"full\", details = \"details\"\n}\n\nexport interface Content {\n    img: { [type in ImageType]?: Partial<HTMLImageElement> },\n    links: { [type in LinkType]?: string },\n    technologies: string[],\n    credentials: {\n        user: string,\n        hash: string\n    }\n}\n\nexport default interface CodePenItemContentExtractor<ContentType extends keyof Content> {\n    key: string,\n    extract: ($: any) => Content[ContentType], // TODO: fix the typing\n}\n\nconst imgExtractor: CodePenItemContentExtractor<\"img\"> = {\n    key: \"img\",\n    extract: $ => ({[ImageType.screenshot]: $(\"img\")[0].attribs})\n};\n\nconst linksExtractor: CodePenItemContentExtractor<\"links\"> = {\n    key: \"links\",\n    extract: $ => {\n        const elements = $(\"a\");\n        const distinctLinks: string[] = Array.from(new Set(Array.from(elements).map((element: any) => element.attribs.href)));\n        return Object.keys(LinkType).reduce(toLinksObject, {});\n\n        function toLinksObject(obj, part: string) {\n            const matchedElement = distinctLinks.find(pathWith(part));\n            if (matchedElement) {\n                const linkType = LinkType[part];\n                obj[linkType] = matchedElement;\n            }\n            return obj;\n        }\n\n        function pathWith(part: string): (path: string) => boolean {\n            return path => path.indexOf(`/${part}/`) !== -1;\n        }\n    }\n};\n\nconst REGEX_PATTERN = /This Pen uses: (.+)/;\n\nconst technologiesExtractor: CodePenItemContentExtractor<\"technologies\"> = {\n    key: \"technologies\",\n    extract: $ => {\n        const elements = $(\"small\");\n        const sentence = elements[0].children[0].data;\n        if (sentence) {\n            const matchResult = REGEX_PATTERN.exec(sentence);\n            if (matchResult && matchResult[1]) {\n                return matchResult[1].split(\",\")\n                    .map(s => s.trim())\n                    .filter(s => \"and\" !== s);\n            }\n        }\n        // TODO: add test\n        console.debug(`Unable to extract technologies from '${sentence}'`);\n        return [];\n    }\n};\n\nconst credentialsExtractor: CodePenItemContentExtractor<\"credentials\"> = {\n    key: \"credentials\",\n    extract: $ => {\n        const elements = $(\"a\");\n        const firstLink = elements[0];\n        const penUrl = new URL(firstLink.attribs.href);\n        const pathname = penUrl.pathname;\n        const parts = pathname.split(\"/\");\n\n        return {\n            user: parts[1],\n            hash: parts[3],\n        };\n    }\n};\n\nexport {imgExtractor, linksExtractor, technologiesExtractor, credentialsExtractor};\n","import cheerio from \"cheerio\";\nimport CodePenItemContentExtractor, {Content} from \"./CodePenItemContentExtractor\";\n\nexport default class CodePenItemContentParser {\n    private readonly $: cheerio.Root;\n\n    private constructor($: cheerio.Root) {\n        this.$ = $;\n    }\n\n    public static newParser(rawContent: string): CodePenItemContentParser {\n        const $ = cheerio.load(rawContent);\n        return new CodePenItemContentParser($);\n    }\n\n    parseContent<T extends keyof Content>(extractor: CodePenItemContentExtractor<T>): Content[T] {\n        return extractor.extract(this.$);\n    }\n}\n","import * as React from \"react\";\nimport { createStyles, Theme, withStyles, WithStyles } from \"@material-ui/core\";\nimport { Breakpoint } from \"@material-ui/core/styles/createBreakpoints\";\nimport CodePen from \"ts-react-codepen-embed\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport withWidth from \"@material-ui/core/withWidth\";\n\nimport { PortfolioProps } from \"./PortfolioProps\";\nimport CodePenItemContentParser from \"../../services/portfolio/CodePenItemContentParser\";\nimport { credentialsExtractor } from \"../../services/portfolio/CodePenItemContentExtractor\";\n\nconst styles = (theme: Theme) => createStyles({\n    embeddedContainer: {\n        margin: \"5%\"\n    }\n});\n\ninterface EmbeddedPenPortfolioProps extends PortfolioProps, WithStyles<typeof styles> {\n    isScriptLoaded?: boolean\n}\n\nconst MAPPING_HEIGHTS: { [b in Breakpoint]: number } = {\n    xs: 288,\n    sm: 384,\n    md: 384,\n    lg: 640,\n    xl: 768,\n};\n\nfunction EmbeddedPenPortfolio(props: EmbeddedPenPortfolioProps) {\n    const { title, content, isScriptLoaded, classes } = props;\n    const contentParser = CodePenItemContentParser.newParser(content);\n    const { user, hash } = contentParser.parseContent(credentialsExtractor);\n\n    return (\n        <div className={classes.embeddedContainer}>\n            <CodePen\n                user={user}\n                hash={hash}\n                title={title}\n                height={getHeight()}\n                loader={() => <CircularProgress/>}\n                defaultTab=\"result\"\n                shouldLoadScript={false}\n                overrideAsLoaded={isScriptLoaded}\n            />\n        </div>\n    );\n\n    function getHeight() {\n        const width: Breakpoint = (props as any).width;\n        return MAPPING_HEIGHTS[width];\n    }\n}\n\nexport default withWidth()(withStyles(styles)(EmbeddedPenPortfolio));\n","import * as React from \"react\";\nimport {createStyles, Theme, WithStyles, withStyles} from \"@material-ui/core\";\nimport {Items} from \"rss-parser\";\nimport {CodepenEmbedScriptTagBuilder, ScriptTagBuilder} from \"ts-react-codepen-embed\";\n\nimport RssFeedsParser from \"../../services/portfolio/RssFeedsParser\";\nimport EmbeddedPenPortfolio from \"./EmbeddedPenPortfolio\";\n\nconst styles = (theme: Theme) => createStyles({});\n\ninterface Props extends WithStyles<typeof styles> {\n    parser: RssFeedsParser;\n    rssFeedUrl: string;\n}\n\ninterface State {\n    items: Items[],\n    loaded: boolean,\n    error?: string,\n}\n\nclass EmbeddedPenPortfolios extends React.Component<Props, State> {\n    private scriptTagBuilder: ScriptTagBuilder;\n\n    constructor(props: Readonly<Props>) {\n        super(props);\n        this.state = {loaded: false, items: []};\n\n        this.scriptTagBuilder = new CodepenEmbedScriptTagBuilder()\n            .setAsync(true)\n            .withOnLoadHandler(() => this.setState({loaded: true,}))\n            .withOnErrorHandler(() => this.setState({error: 'Failed to load the pen'}));\n    }\n\n    componentDidMount(): void {\n        this.props.parser.parseUrl(this.props.rssFeedUrl)\n            .then(items => this.setState({items}))\n            .then(() => this.scriptTagBuilder.appendTo(document.body))\n            .catch(error => console.log(error));\n    }\n\n    render() {\n        return (\n            <div>\n                {this.state.items.map(({content = \"\", link = \"\", title = \"\"}: Items, index: number) =>\n                    (<EmbeddedPenPortfolio\n                        key={`${index}_${title}`}\n                        content={content}\n                        link={link}\n                        title={title}\n                        isScriptLoaded={this.state.loaded}\n                    />)\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(EmbeddedPenPortfolios);","import React from 'react';\nimport RssParser from \"rss-parser\";\n\nimport SectionMetadata from \"../model/SectionMetadata\";\n// import HomePanel from \"../components/home/HomePanel\";\nimport AboutPanel from \"../components/about/AboutPanel\";\nimport PortfoliosPanel from \"../components/portfolio/PortfoliosPanel\";\nimport ContactPanel from \"../components/contact/ContactPanel\";\nimport EmbeddedPenPortfoliosFactory from \"../components/portfolio/EmbeddedPenPortfoliosFactory\";\nimport LocalCodePenRssFeedsParser from \"../services/portfolio/LocalCodePenRssFeedsParser\";\n\nconst CORS_PROXY = \"https://cors-anywhere.herokuapp.com\";\nconst rssFeedUrl = `${CORS_PROXY}/https://codepen.io/collection/neBvQa/feed`;\nconst factory = new EmbeddedPenPortfoliosFactory(new LocalCodePenRssFeedsParser(new RssParser()), rssFeedUrl);\n\nconst sectionConfigs: SectionMetadata[] = [\n    // {\n    //     name: 'Home',\n    //     component: <HomePanel/>\n    // },\n    {\n        name: 'About',\n        component: <AboutPanel/>\n    },\n    {\n        name: 'Portfolio',\n        component: <PortfoliosPanel portfoliosFactory={factory}/>\n    },\n    {\n        name: 'Contact',\n        component: <ContactPanel/>\n    },\n];\n\nexport default sectionConfigs;","import * as React from \"react\";\n\nimport RssFeedsParser from \"../../services/portfolio/RssFeedsParser\";\nimport {PortfoliosFactory} from \"./PortfoliosFactory\";\nimport EmbeddedPenPortfolios from \"./EmbeddedPenPortfolios\";\n\nexport default class EmbeddedPenPortfoliosFactory implements PortfoliosFactory {\n    private readonly parser: RssFeedsParser;\n    private readonly rssFeedUrl: string;\n\n    constructor(parser: RssFeedsParser, rssFeedUrl: string) {\n        this.parser = parser;\n        this.rssFeedUrl = rssFeedUrl;\n    }\n\n    createPortfolios() {\n        return Promise.resolve(<EmbeddedPenPortfolios parser={this.parser} rssFeedUrl={this.rssFeedUrl}/>);\n    }\n}\n","import RssFeedsParser from \"./RssFeedsParser\";\nimport {RssParser} from \"./RssParser\";\nimport {rssFeedsContent} from \"../../metadata/portfolios/rssFeeds.json\";\n\nexport default class LocalCodePenRssFeedsParser implements RssFeedsParser {\n    private readonly rssParser: RssParser;\n    private rssFeeds: string;\n\n    constructor(rssParser: RssParser, rssFeeds: string = rssFeedsContent) {\n        this.rssParser = rssParser;\n        this.rssFeeds = rssFeeds;\n    }\n\n    async parseUrl() {\n        let output;\n\n        try {\n            output = await this.rssParser.parseString(this.rssFeeds);\n        } catch (e) {\n            throw new Error(`Unable to read or parse rssFeedsString due to: '${e}'`);\n        }\n\n        if (output && output.items) {\n            return output.items;\n        } else {\n            throw new Error(`Missing 'items' from the parsed output: '${this.rssFeeds}'`);\n        }\n    }\n}\n","import {createMuiTheme} from '@material-ui/core/styles';\nimport {indigo} from \"@material-ui/core/colors\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: indigo,\n        secondary: {main: '#e6f0fe',},\n    },\n    typography: {\n    },\n    overrides: {\n        MuiTableRow: {\n            root: { //for the body\n                height: \"100%\"\n            },\n            head: { //for the head\n                height: \"100%\"\n            }\n        }\n    }\n});\n\nexport {theme};\n","import ReactGA from 'react-ga';\n\nexport default class GoogleAnalyticsManager {\n    private _isInitialized: boolean = false;\n\n    public init() {\n        const isGoogleAnalyticsTrackingEnabled = isTrue(process.env.REACT_APP_GOOGLE_ANALYTICS_TRACKING_ENABLED);\n        const trackingId = process.env.REACT_APP_GOOGLE_ANALYTICS_TRACKING_ID;\n        const testMode = isTrue(process.env.REACT_APP_REACT_GA_TEST_MODE);\n\n        if (isGoogleAnalyticsTrackingEnabled && trackingId) {\n            console.log(\"Google Analytics tracking is enabled and trackingId is defined, initializing Google Analytics module now\");\n            ReactGA.initialize(trackingId, { testMode });\n            this._isInitialized = true;\n        } else {\n            if (!isGoogleAnalyticsTrackingEnabled) {\n                console.log(\"Google Analytics tracking is disabled and trackingId is defined, thus not initializing\");\n            } else {\n                console.log(\"Google Analytics trackingId is not defined, thus not initializing\");\n            }\n        }\n    }\n\n    public pageview(path: string) {\n        if (this.isInitialized()) {\n            console.log(`pageview at path: ${path}`);\n            ReactGA.pageview(path);\n        } else {\n            console.warn(`Not initialized - not going to set pageview for path: \"${path}\"`);\n        }\n    }\n\n    public isInitialized(): boolean {\n        return this._isInitialized;\n    }\n}\n\nfunction isTrue(optionalString?: string): boolean {\n    return (typeof optionalString !== \"undefined\") && (\"true\" === optionalString.toLowerCase());\n}\n","import React, {Component} from 'react';\nimport {MuiThemeProvider} from '@material-ui/core/styles';\n\nimport PortfolioPage from \"./page/PortfolioPage\";\nimport sectionConfigs from \"../metadata/sectionConfigs\";\nimport {theme} from \"../services/MuiThemeFactory\";\n\nimport '../css/App.css';\nimport GoogleAnalyticsManager from \"../services/GoogleAnalyticsManager\";\n\ninterface Props {\n}\n\nclass App extends Component<Props> {\n    private readonly gAManager: GoogleAnalyticsManager = new GoogleAnalyticsManager();\n\n    constructor(props: Readonly<Props>);\n    constructor(props: Props, context?: any);\n    constructor(props: Props | Readonly<Props>, context?: any) {\n        super(props, context);\n        this.gAManager.init();\n    }\n\n    componentDidMount(): void {\n        const path = window.location.pathname + window.location.search;\n        this.gAManager.pageview(path);\n    }\n\n    render() {\n        return (\n            <MuiThemeProvider theme={theme}>\n                <div className=\"App\">\n                    <PortfolioPage sectionConfigs={sectionConfigs}/>\n                </div>\n            </MuiThemeProvider>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"./utils/polyfills\";\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}