{"version":3,"sources":["components/page/OldVersionLinkButton.tsx","components/page/PageAppBar.tsx","components/page/DrawerItemsWithScrollspy.tsx","components/page/ResponsivePageDrawer.tsx","components/page/PageMain.tsx","components/page/PortfolioPage.tsx","services/portfolio/CodePenRssFeedsParser.ts","components/common/Section.tsx","components/home/HomePanel.tsx","components/about/AboutInformation.tsx","components/about/AboutPanel.tsx","services/portfolio/CodePenItemContentExtractor.ts","services/portfolio/CodePenItemContentParser.ts","components/portfolio/EmbeddedPenPortfolio.tsx","components/portfolio/Portfolio.tsx","components/portfolio/PortfoliosPanel.tsx","components/contact/ContactIcon.tsx","components/contact/ContactPanel.tsx","metadata/sectionConfigs.tsx","services/MuiThemeFactory.ts","components/App.tsx","serviceWorker.js","index.tsx"],"names":["OLD_VERSION_URL","withStyles","theme","createStyles","props","react_default","a","createElement","Button_default","href","variant","color","appBar","Object","defineProperty","zIndex","drawer","breakpoints","down","modal","title","flexGrow","textAlign","menuButton","marginRight","up","display","classes","AppBar_default","position","className","Toolbar_default","IconButton_default","aria-label","onClick","onIconButtonClick","Menu_default","Typography_default","noWrap","classNames","Hidden_default","smDown","page_OldVersionLinkButton","root","width","flexShrink","drawerPaper","content","padding","spacing","unit","toolbar","mixins","scrollSpyList","margin","scrollSpyListItem","oldVersionLinkButton","items","Fragment","Scrollspy_default","currentClassName","map","text","index","key","item","concat","replace","toLowerCase","ListItem_default","button","ListItemIcon_default","MoveToInbox_default","Mail_default","ListItemText_default","primary","mdUp","ResponsivePageDrawer","_this$props","this","sectionConfigs","Drawer_default","anchor","direction","open","drawerOpen","onClose","onDrawerClose","paper","drawerContent","page_DrawerItemsWithScrollspy","asItems","Component","config","name","withTheme","_content","component","Divider_default","PortfolioPage","state","handleDrawerToggle","_this","setState","CssBaseline_default","page_PageAppBar","page_ResponsivePageDrawer","page_PageMain","CodePenRssFeedsParser","rssParser","classCallCheck","url","parseURL","then","output","Error","catch","e","Section","_ref","id","subtitle","hasDivider","children","react","section","header","optionalTypography","optionalTitle","optionalSubtitle","optionalDivider","body","_ref2","paragraph","defaultProps","common_Section","marginTop","overflowX","table","height","row","palette","secondary","contrastText","divider","backgroundColor","light","Paper_default","Table_default","TableHead_default","dividerRow","TableBody_default","informationMetadatas","group","i","entry","j","TableRow_default","TableCell_default","scope","align","value","ImageType","LinkType","about_AboutInformation","CodePenItemContentParser","$","extractor","extract","rawContent","cheerio","load","credentialsExtractor","firstLink","parts","URL","attribs","pathname","split","user","hash","embeddedContainer","_contentParser$parseC","newParser","parseContent","lib_default","loader","CircularProgress_default","portfolio_EmbeddedPenPortfolio","PortfoliosPanel","possibleConstructorReturn","getPrototypeOf","call","_this2","parser","parseUrl","rssFeedUrl","_this3","_ref$content","_ref$link","link","_ref$title","portfolio","portfolio_Portfolio","React","icon","metadata","target","src","img","alt","Badges","smUp","contactIcons","badgeMicroMetadatas","xsDown","badgeMetadatas","metadatas","contact_ContactIcon","toString","icons","flexFlow","justifyContent","alignItems","badges","iconMetadatas","RssParser","home_HomePanel","about_AboutPanel","portfolio_PortfoliosPanel","contact_ContactPanel","createMuiTheme","indigo","main","typography","useNextVariants","overrides","MuiTableRow","head","App","core_styles","page_PortfolioPage","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8936198c.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Theme, withStyles} from '@material-ui/core/styles';\r\nimport {createStyles, WithStyles} from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst styles = (theme: Theme) => createStyles({});\r\n\r\ninterface OldVersionLinkButtonProps extends WithStyles<typeof styles> {\r\n}\r\n\r\nconst OLD_VERSION_URL = \"https://codepen.io/htbkoo/full/ZyYWNN/\";\r\n\r\nfunction OldVersionLinkButton(props: OldVersionLinkButtonProps) {\r\n    return (\r\n        <Button href={OLD_VERSION_URL} variant=\"contained\" color=\"inherit\">\r\n            Switch to old version\r\n        </Button>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(OldVersionLinkButton);","import React from 'react';\r\nimport {Theme, withStyles} from '@material-ui/core/styles';\r\nimport {createStyles, WithStyles} from '@material-ui/core';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport classNames from \"classnames\";\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nimport OldVersionLinkButton from \"./OldVersionLinkButton\";\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        [theme.breakpoints.down('sm')]: {\r\n            zIndex: theme.zIndex.modal + 1,\r\n        },\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n        textAlign: \"left\",\r\n    },\r\n    menuButton: {\r\n        marginRight: 20,\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n});\r\n\r\ninterface PageAppBarProps extends WithStyles<typeof styles> {\r\n    onIconButtonClick: () => void\r\n}\r\n\r\nfunction PageAppBar(props: PageAppBarProps) {\r\n    const {classes} = props;\r\n\r\n    return (\r\n        <AppBar position=\"fixed\" className={classes.appBar}>\r\n            <Toolbar>\r\n                <IconButton\r\n                    color=\"inherit\"\r\n                    aria-label=\"Open drawer\"\r\n                    onClick={props.onIconButtonClick}\r\n                    className={classes.menuButton}\r\n                >\r\n                    <MenuIcon/>\r\n                </IconButton>\r\n                <Typography variant=\"h6\" color=\"inherit\" noWrap className={classNames(classes.title)}>\r\n                    Hey's Personal Portfolio\r\n                </Typography>\r\n                <Hidden smDown>\r\n                    <OldVersionLinkButton/>\r\n                </Hidden>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(PageAppBar);","import React from 'react';\r\nimport {Theme, withStyles} from '@material-ui/core/styles';\r\nimport {createStyles, WithStyles} from '@material-ui/core';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport Scrollspy from 'react-scrollspy';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nimport OldVersionLinkButton from \"./OldVersionLinkButton\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing.unit * 3,\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    scrollSpyList: {\r\n        margin: 0,\r\n        padding: 0\r\n    },\r\n    scrollSpyListItem: {\r\n        display: 'flex',\r\n    },\r\n    oldVersionLinkButton: {\r\n        margin: \"5%\"\r\n    }\r\n});\r\n\r\ninterface DrawerItemsWithScrollspyProps extends WithStyles<typeof styles> {\r\n    items: string[],\r\n}\r\n\r\nfunction DrawerItemsWithScrollspy(props: DrawerItemsWithScrollspyProps) {\r\n    const {items, classes} = props;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Scrollspy\r\n                items={items}\r\n                currentClassName=\"is-current\"\r\n                className={classes.scrollSpyList}\r\n            >\r\n                {items.map((text, index) => (\r\n                    <a key={text} href={itemToHref(text)} className={classes.scrollSpyListItem}>\r\n                        <ListItem button>\r\n                            <ListItemIcon>{index % 2 === 0 ? <InboxIcon/> : <MailIcon/>}</ListItemIcon>\r\n                            <ListItemText primary={text}/>\r\n                        </ListItem>\r\n                    </a>\r\n                ))}\r\n            </Scrollspy>\r\n            <Hidden mdUp>\r\n                <div className={classes.oldVersionLinkButton}>\r\n                    <OldVersionLinkButton/>\r\n                </div>\r\n            </Hidden>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nfunction itemToHref(item: string): string {\r\n    return `#${item.replace(/ /g, \"-\").toLowerCase()}`;\r\n}\r\n\r\nexport default withStyles(styles)(DrawerItemsWithScrollspy);","import React, {Component} from 'react';\r\nimport {Theme, withStyles} from '@material-ui/core/styles';\r\nimport {createStyles, WithStyles} from '@material-ui/core';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport DrawerItemsWithScrollspy from \"./DrawerItemsWithScrollspy\";\r\nimport SectionMetadata from \"../../model/SectionMetadata\";\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n});\r\n\r\ninterface ResponsivePageDrawerProps extends WithStyles<typeof styles, true> {\r\n    sectionConfigs: SectionMetadata[],\r\n    drawerOpen: boolean,\r\n    onDrawerClose: () => void\r\n}\r\n\r\nclass ResponsivePageDrawer extends Component<ResponsivePageDrawerProps> {\r\n    render() {\r\n        const {classes, sectionConfigs, theme} = this.props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n                <Hidden mdUp>\r\n                    <Drawer\r\n                        variant=\"temporary\"\r\n                        anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n                        open={this.props.drawerOpen}\r\n                        onClose={this.props.onDrawerClose}\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                    >\r\n                        {drawerContent()}\r\n                    </Drawer>\r\n                </Hidden>\r\n                <Hidden smDown>\r\n                    <Drawer\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                        variant=\"permanent\"\r\n                        open\r\n                    >\r\n                        {drawerContent()}\r\n                    </Drawer>\r\n                </Hidden>\r\n            </React.Fragment>\r\n        );\r\n\r\n        function drawerContent() {\r\n            return (\r\n                <React.Fragment>\r\n                    <div className={classes.toolbar}/>\r\n                    <DrawerItemsWithScrollspy items={asItems(sectionConfigs)}/>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction asItems(sectionConfigs: SectionMetadata[]): string[] {\r\n    return sectionConfigs.map(config => config.name);\r\n}\r\n\r\nexport default withStyles(styles, {withTheme: true})(ResponsivePageDrawer);","import React from 'react';\r\nimport {Theme, withStyles} from '@material-ui/core/styles';\r\nimport {createStyles, WithStyles} from '@material-ui/core';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport SectionMetadata from \"../../model/SectionMetadata\";\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        [theme.breakpoints.down('xs')]: {\r\n            padding: \"unset\"\r\n        },\r\n        [theme.breakpoints.up('sm')]: {\r\n            padding: theme.spacing.unit * 3\r\n        },\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n});\r\n\r\ninterface PageMainProps extends WithStyles<typeof styles> {\r\n    sectionConfigs: SectionMetadata[]\r\n}\r\n\r\nfunction PageMain(props: PageMainProps) {\r\n    const {classes, sectionConfigs} = props;\r\n\r\n    return (\r\n        <main className={classes.content}>\r\n            <div className={classes.toolbar}/>\r\n\r\n            {sectionConfigs.map(config => (\r\n                <div key={config.name}>\r\n                    {config.component}\r\n                    <Divider/>\r\n                </div>\r\n            ))}\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(PageMain);","import React, {Component} from 'react';\r\nimport {Theme, withStyles} from '@material-ui/core/styles';\r\nimport {createStyles, WithStyles} from '@material-ui/core';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport PageAppBar from \"./PageAppBar\";\r\nimport PageDrawer from \"./ResponsivePageDrawer\";\r\nimport PageMain from \"./PageMain\";\r\nimport SectionMetadata from \"../../model/SectionMetadata\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    drawer: {\r\n        [theme.breakpoints.up('md')]: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n        },\r\n    },\r\n});\r\n\r\ninterface PortfolioPageProps extends WithStyles<typeof styles> {\r\n    sectionConfigs: SectionMetadata[]\r\n}\r\n\r\n\r\ninterface PortfolioPageState {\r\n    drawerOpen: boolean\r\n}\r\n\r\nclass PortfolioPage extends Component<PortfolioPageProps, PortfolioPageState> {\r\n    state = {drawerOpen: false};\r\n\r\n    private handleDrawerToggle = () => this.setState(state => ({drawerOpen: !state.drawerOpen}));\r\n\r\n    render() {\r\n        const {classes, sectionConfigs} = this.props;\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <CssBaseline/>\r\n                <div>\r\n                    <PageAppBar onIconButtonClick={this.handleDrawerToggle}/>\r\n                </div>\r\n                <nav className={classes.drawer}>\r\n                    <PageDrawer\r\n                        sectionConfigs={sectionConfigs}\r\n                        drawerOpen={this.state.drawerOpen}\r\n                        onDrawerClose={this.handleDrawerToggle}\r\n                    />\r\n                </nav>\r\n                <div>\r\n                    <PageMain sectionConfigs={sectionConfigs}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(PortfolioPage);","import {Output} from \"rss-parser\";\r\n\r\ninterface RssParser {\r\n    // parseString(xml: string, callback?: (err: Error, feed: Output) => void): Promise<Output>;\r\n    parseURL(feedUrl: string, callback?: (err: Error, feed: Output) => void, redirectCount?: number): Promise<Output>;\r\n}\r\n\r\nexport default class CodePenRssFeedsParser {\r\n    private readonly rssParser: RssParser;\r\n\r\n    constructor(rssParser: RssParser) {\r\n        this.rssParser = rssParser;\r\n    }\r\n\r\n    async parseUrl(url: string) {\r\n        return this.rssParser.parseURL(url)\r\n            .then(output => {\r\n                if (output && output.items) {\r\n                    return output.items;\r\n                } else {\r\n                    throw new Error(\"Missing 'items' from the parsed output\");\r\n                }\r\n            })\r\n            .catch(e => {\r\n                throw new Error(`Unable to parse from url: '${url}' due to ${e}`);\r\n            });\r\n    }\r\n}","import * as React from \"react\";\r\nimport {FunctionComponent} from \"react\";\r\nimport {createStyles, Theme, withStyles, WithStyles} from \"@material-ui/core\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport {ThemeStyle} from \"@material-ui/core/styles/createTypography\";\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    section: {\r\n        padding: theme.spacing.unit * 3\r\n    },\r\n    header: {},\r\n    body: {},\r\n});\r\n\r\ninterface SectionProps extends WithStyles<typeof styles> {\r\n    id: string,\r\n    title?: string,\r\n    subtitle?: string,\r\n    hasDivider?: boolean,\r\n}\r\n\r\nconst Section: FunctionComponent<SectionProps> = ({id, title, subtitle, hasDivider, children, classes}) => (\r\n    <div id={id} className={classes.section}>\r\n        <div className={classes.header}>\r\n            {optionalTitle(title)}\r\n            {optionalSubtitle(subtitle)}\r\n        </div>\r\n        {optionalDivider(hasDivider)}\r\n        <div className={classes.body}>\r\n            {children}\r\n        </div>\r\n    </div>\r\n);\r\n\r\nfunction optionalTitle(title?: string) {\r\n    return optionalTypography({text: title, variant: \"h3\"});\r\n}\r\n\r\nfunction optionalSubtitle(subtitle?: string) {\r\n    return optionalTypography({text: subtitle, variant: \"h5\"});\r\n}\r\n\r\ntype Variant = ThemeStyle | 'srOnly' | 'inherit';\r\n\r\nfunction optionalTypography({text, variant}: { text?: string, variant: Variant }) {\r\n    return text\r\n        ? <Typography variant={variant} paragraph>{text}</Typography>\r\n        : \"\";\r\n}\r\n\r\nfunction optionalDivider(hasDivider?: boolean) {\r\n    return hasDivider\r\n        ? <Divider/>\r\n        : \"\";\r\n}\r\n\r\nSection.defaultProps = {\r\n    hasDivider: false\r\n};\r\n\r\nexport default withStyles(styles)(Section);","import * as React from \"react\";\r\nimport {createStyles, Theme, withStyles, WithStyles} from \"@material-ui/core\";\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport Section from \"../common/Section\";\r\n\r\nconst styles = (theme: Theme) => createStyles({});\r\n\r\ninterface HomePanelProps extends WithStyles<typeof styles> {\r\n}\r\n\r\nfunction HomePanel(props: HomePanelProps) {\r\n    return (\r\n        <Section\r\n            id=\"home\"\r\n            hasDivider={false}\r\n            title=\"Welcome To My Portfolio\"\r\n        >\r\n            <Typography paragraph >\r\n\r\n            </Typography>\r\n        </Section>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(HomePanel);","import * as React from \"react\";\r\nimport {createStyles, Theme, withStyles, WithStyles} from \"@material-ui/core\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport informationMetadatas from \"../../metadata/about/information.json\";\r\nimport AboutEntry from \"../../model/AboutEntry\";\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    root: {\r\n        // width: '100%',\r\n        marginTop: theme.spacing.unit * 3,\r\n        overflowX: 'auto',\r\n    },\r\n    table: {\r\n        height: \"auto\"\r\n        // minWidth: 700,\r\n    },\r\n    row: {\r\n        color: theme.palette.secondary.contrastText,\r\n        height: theme.spacing.unit * 4,\r\n    },\r\n    divider: {\r\n        backgroundColor: theme.palette.secondary.light,\r\n        color: theme.palette.secondary.contrastText\r\n    }\r\n});\r\n\r\ninterface AboutInformationProps extends WithStyles<typeof styles> {\r\n}\r\n\r\nfunction AboutInformation(props: AboutInformationProps) {\r\n    const {classes} = props;\r\n    return (\r\n        <Paper className={classes.root}>\r\n            <Table className={classes.table}>\r\n                <TableHead>\r\n                    {dividerRow()}\r\n                </TableHead>\r\n                <TableBody>\r\n                    {(informationMetadatas as AboutEntry[][]).map(toTableGroups)}\r\n                </TableBody>\r\n            </Table>\r\n        </Paper>\r\n    );\r\n\r\n    function toTableGroups(group: AboutEntry[], i: number) {\r\n        return (\r\n            <React.Fragment key={i}>\r\n                {group.map(toRow)}\r\n                {dividerRow()}\r\n            </React.Fragment>\r\n        );\r\n\r\n        function toRow(entry: AboutEntry, j: number) {\r\n            return (\r\n                <TableRow key={`${i}_${j}_${entry.key}`} className={classes.row}>\r\n                    <TableCell component=\"th\" scope=\"row\" align=\"right\">\r\n                        <strong>{entry.key}</strong>\r\n                    </TableCell>\r\n                    <TableCell align=\"left\">\r\n                        <span>{entry.value}</span>\r\n                    </TableCell>\r\n                </TableRow>\r\n            );\r\n        }\r\n    }\r\n\r\n    function dividerRow() {\r\n        return (\r\n            <TableRow className={classes.divider}>\r\n                <TableCell/>\r\n                <TableCell/>\r\n            </TableRow>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(AboutInformation);\r\n\r\n","import * as React from \"react\";\r\nimport {createStyles, Theme, withStyles, WithStyles} from \"@material-ui/core\";\r\n\r\nimport Section from \"../common/Section\";\r\nimport AboutInformation from \"./AboutInformation\";\r\n\r\nconst styles = (theme: Theme) => createStyles({});\r\n\r\ninterface AboutPanelProps extends WithStyles<typeof styles> {\r\n}\r\n\r\nfunction AboutPanel(props: AboutPanelProps) {\r\n    return (\r\n        <Section\r\n            id=\"about\"\r\n            hasDivider={false}\r\n            title=\"About\"\r\n            subtitle=\"Some information about myself\"\r\n        >\r\n            <AboutInformation/>\r\n        </Section>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(AboutPanel);","enum ImageType {\r\n    screenshot = \"screenshot\"\r\n}\r\n\r\nenum LinkType {\r\n    pen = \"code\", full = \"full\", details = \"details\"\r\n}\r\n\r\nexport interface Content {\r\n    img: { [type in ImageType]?: Partial<HTMLImageElement> },\r\n    links: { [type in LinkType]?: string },\r\n    technologies: string[],\r\n    credentials: {\r\n        user: string,\r\n        hash: string\r\n    }\r\n}\r\n\r\nexport default interface CodePenItemContentExtractor<ContentType extends keyof Content> {\r\n    key: string,\r\n    extract: ($: CheerioStatic) => Content[ContentType]\r\n}\r\n\r\nconst imgExtractor: CodePenItemContentExtractor<\"img\"> = {\r\n    key: \"img\",\r\n    extract: $ => ({[ImageType.screenshot]: $(\"img\")[0].attribs})\r\n};\r\n\r\nconst linksExtractor: CodePenItemContentExtractor<\"links\"> = {\r\n    key: \"links\",\r\n    extract: $ => {\r\n        const elements = $(\"a\");\r\n        const distinctLinks: string[] = Array.from(new Set(Array.from(elements).map((element: any) => element.attribs.href)));\r\n        return Object.keys(LinkType).reduce(toLinksObject, {});\r\n\r\n        function toLinksObject(obj, part: string) {\r\n            const matchedElement = distinctLinks.find(pathWith(part));\r\n            if (matchedElement) {\r\n                const linkType = LinkType[part];\r\n                obj[linkType] = matchedElement;\r\n            }\r\n            return obj;\r\n        }\r\n\r\n        function pathWith(part: string): (path: string) => boolean {\r\n            return path => path.indexOf(`/${part}/`) !== -1;\r\n        }\r\n    }\r\n};\r\n\r\nconst REGEX_PATTERN = /This Pen uses: (.+)/;\r\n\r\nconst technologiesExtractor: CodePenItemContentExtractor<\"technologies\"> = {\r\n    key: \"technologies\",\r\n    extract: $ => {\r\n        const elements = $(\"small\");\r\n        const sentence = elements[0].children[0].data;\r\n        if (sentence) {\r\n            const matchResult = REGEX_PATTERN.exec(sentence);\r\n            if (matchResult && matchResult[1]) {\r\n                return matchResult[1].split(\",\")\r\n                    .map(s => s.trim())\r\n                    .filter(s => \"and\" !== s);\r\n            }\r\n        }\r\n        // TODO: add test\r\n        console.debug(`Unable to extract technologies from '${sentence}'`);\r\n        return [];\r\n    }\r\n};\r\n\r\nconst credentialsExtractor: CodePenItemContentExtractor<\"credentials\"> = {\r\n    key: \"credentials\",\r\n    extract: $ => {\r\n        const elements = $(\"a\");\r\n        const firstLink = elements[0];\r\n        const penUrl = new URL(firstLink.attribs.href);\r\n        const pathname = penUrl.pathname;\r\n        const parts = pathname.split(\"/\");\r\n\r\n        return {\r\n            user: parts[1],\r\n            hash: parts[3],\r\n        };\r\n    }\r\n};\r\n\r\nexport {imgExtractor, linksExtractor, technologiesExtractor, credentialsExtractor};","import cheerio from \"cheerio\";\r\nimport CodePenItemContentExtractor, {Content} from \"./CodePenItemContentExtractor\";\r\n\r\nexport default class CodePenItemContentParser {\r\n    private readonly $: CheerioStatic;\r\n\r\n    private constructor($: CheerioStatic) {\r\n        this.$ = $;\r\n    }\r\n\r\n    public static newParser(rawContent: string): CodePenItemContentParser {\r\n        const $ = cheerio.load(rawContent);\r\n        return new CodePenItemContentParser($);\r\n    }\r\n\r\n    parseContent<T extends keyof Content>(extractor: CodePenItemContentExtractor<T>): Content[T] {\r\n        return extractor.extract(this.$);\r\n    }\r\n}\r\n","import * as React from \"react\";\r\nimport {createStyles, Theme, withStyles, WithStyles} from \"@material-ui/core\";\r\nimport CodePen from \"react-codepen-embed\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nimport {PortfolioProps} from \"./PortfolioProps\";\r\nimport CodePenItemContentParser from \"../../services/portfolio/CodePenItemContentParser\";\r\nimport {credentialsExtractor} from \"../../services/portfolio/CodePenItemContentExtractor\";\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    embeddedContainer: {}\r\n});\r\n\r\ninterface EmbeddedPenPortfolioProps extends PortfolioProps, WithStyles<typeof styles> {\r\n}\r\n\r\nfunction EmbeddedPenPortfolio(props: EmbeddedPenPortfolioProps) {\r\n    const {title, content, classes} = props;\r\n    const contentParser = CodePenItemContentParser.newParser(content);\r\n    const {user, hash} = contentParser.parseContent(credentialsExtractor);\r\n\r\n    return (\r\n        <div className={classes.embeddedContainer}>\r\n            <CodePen\r\n                user={user}\r\n                hash={hash}\r\n                title={title}\r\n                height={512}\r\n                loader={() => <CircularProgress/>}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(EmbeddedPenPortfolio);","import * as React from \"react\";\r\nimport {createStyles, Theme, withStyles, WithStyles} from \"@material-ui/core\";\r\nimport {PortfolioProps} from \"./PortfolioProps\";\r\nimport EmbeddedPenPortfolio from \"./EmbeddedPenPortfolio\";\r\n\r\nconst styles = (theme: Theme) => createStyles({});\r\n\r\ninterface PortfolioPropsWithStyles extends PortfolioProps, WithStyles<typeof styles> {\r\n}\r\n\r\nfunction Portfolio(props: PortfolioPropsWithStyles) {\r\n    return (\r\n        <EmbeddedPenPortfolio {...props}/>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(Portfolio);","import * as React from \"react\";\r\nimport {createStyles, Theme, withStyles, WithStyles} from \"@material-ui/core\";\r\n\r\nimport {Items} from \"rss-parser\";\r\n\r\nimport CodePenRssFeedsParser from \"../../services/portfolio/CodePenRssFeedsParser\";\r\nimport Portfolio from \"./Portfolio\";\r\nimport Section from \"../common/Section\";\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    portfolio: {\r\n        margin: \"5%\"\r\n    }\r\n});\r\n\r\ninterface PortfoliosPanelProps extends WithStyles<typeof styles> {\r\n    rssFeedUrl: string,\r\n    parser: CodePenRssFeedsParser\r\n}\r\n\r\ninterface PortfoliosPanelState {\r\n    items: Items[]\r\n}\r\n\r\nclass PortfoliosPanel extends React.Component<PortfoliosPanelProps, PortfoliosPanelState> {\r\n    constructor(props: Readonly<PortfoliosPanelProps>) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            items: []\r\n        };\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        this.props.parser.parseUrl(this.props.rssFeedUrl)\r\n            .then(items => this.setState({items}))\r\n    }\r\n\r\n    render(): React.ReactNode {\r\n        return (\r\n            <Section\r\n                id=\"portfolio\"\r\n                hasDivider={true}\r\n                title=\"Portfolio\"\r\n                subtitle=\"Some of my previous works\"\r\n            >\r\n                <div>\r\n                    {\r\n                        this.state.items.map(({content = \"\", link = \"\", title = \"\"}: Items, index: number) =>\r\n                            <div className={this.props.classes.portfolio} key={`${index}_${title}`}>\r\n                                <Portfolio content={content} link={link} title={title}/>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n            </Section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(PortfoliosPanel);","import * as React from \"react\";\r\nimport {createStyles, Theme, withStyles, WithStyles} from \"@material-ui/core\";\r\nimport ContactMetadata from \"../../model/ContactMetadata\";\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    icon: {\r\n        padding: theme.spacing.unit * 2,\r\n    }\r\n});\r\n\r\ninterface ContactIconProps extends WithStyles<typeof styles> {\r\n    metadata: ContactMetadata\r\n}\r\n\r\nfunction ContactIcon(props: ContactIconProps) {\r\n    const {classes, metadata} = props;\r\n    return (\r\n        <div className={classes.icon}>\r\n            <a href={metadata.href} target=\"_blank\">\r\n                <img\r\n                    src={metadata.img.src}\r\n                    alt={metadata.img.alt}/>\r\n            </a>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(ContactIcon);","import * as React from \"react\";\r\nimport {createStyles, Theme, withStyles, WithStyles} from \"@material-ui/core\";\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nimport ContactIcon from \"./ContactIcon\";\r\n\r\nimport iconMetadatas from \"../../metadata/contact/icons.json\";\r\nimport badgeMetadatas from \"../../metadata/contact/badges.json\";\r\nimport badgeMicroMetadatas from \"../../metadata/contact/badges_micro.json\";\r\nimport ContactMetadata from \"../../model/ContactMetadata\";\r\nimport Section from \"../common/Section\";\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    icons: {\r\n        padding: theme.spacing.unit * 3,\r\n        display: \"flex\",\r\n        flexFlow: \"wrap\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"baseline\"\r\n    },\r\n    badges: {}\r\n});\r\n\r\ninterface ContactPanelProps extends WithStyles<typeof styles> {\r\n}\r\n\r\nfunction ContactPanel(props: ContactPanelProps) {\r\n    const {classes} = props;\r\n    return (\r\n        <Section\r\n            id=\"contact\"\r\n            hasDivider={true}\r\n            title=\"Contact\"\r\n            subtitle=\"Check me out at the following!\"\r\n        >\r\n            <div className={classes.icons}>\r\n                {contactIcons(iconMetadatas)}\r\n            </div>\r\n            <div className={classes.badges}>\r\n                <Badges/>\r\n            </div>\r\n        </Section>\r\n    );\r\n}\r\n\r\nfunction Badges() {\r\n    return (\r\n        <React.Fragment>\r\n            <Hidden smUp>\r\n                {contactIcons(badgeMicroMetadatas)}\r\n            </Hidden>\r\n            <Hidden xsDown>\r\n                {contactIcons(badgeMetadatas)}\r\n            </Hidden>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nfunction contactIcons(metadatas: ContactMetadata[]) {\r\n    return metadatas.map((metadata, i) => (\r\n        <ContactIcon key={`${i.toString()}_${metadata.img.alt}`} metadata={metadata}/>\r\n    ));\r\n}\r\n\r\nexport default withStyles(styles)(ContactPanel);","import React from 'react';\r\nimport RssParser from \"rss-parser\";\r\n\r\nimport CodePenRssFeedsParser from \"../services/portfolio/CodePenRssFeedsParser\";\r\nimport SectionMetadata from \"../model/SectionMetadata\";\r\nimport HomePanel from \"../components/home/HomePanel\";\r\nimport AboutPanel from \"../components/about/AboutPanel\";\r\nimport PortfoliosPanel from \"../components/portfolio/PortfoliosPanel\";\r\nimport ContactPanel from \"../components/contact/ContactPanel\";\r\n\r\nconst parser = new CodePenRssFeedsParser(new RssParser());\r\nconst CORS_PROXY = \"https://cors-anywhere.herokuapp.com\";\r\nconst rssFeedUrl = `${CORS_PROXY}/https://codepen.io/collection/neBvQa/feed`;\r\n\r\nconst sectionConfigs: SectionMetadata[] = [\r\n    {\r\n        name: 'Home',\r\n        component: <HomePanel/>\r\n    },\r\n    {\r\n        name: 'About',\r\n        component: <AboutPanel/>\r\n    },\r\n    {\r\n        name: 'Portfolio',\r\n        component: <PortfoliosPanel parser={parser} rssFeedUrl={rssFeedUrl}/>\r\n    },\r\n    {\r\n        name: 'Contact',\r\n        component: <ContactPanel/>\r\n    },\r\n];\r\n\r\nexport default sectionConfigs;","import {createMuiTheme} from '@material-ui/core/styles';\r\nimport {indigo} from \"@material-ui/core/colors\";\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: indigo,\r\n        secondary: {main: '#e6f0fe',},\r\n    },\r\n    typography: {\r\n        useNextVariants: true,\r\n    },\r\n    overrides: {\r\n        MuiTableRow: {\r\n            root: { //for the body\r\n                height: \"100%\"\r\n            },\r\n            head: { //for the head\r\n                height: \"100%\"\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nexport {theme};","import React, {Component} from 'react';\r\nimport {MuiThemeProvider} from '@material-ui/core/styles';\r\n\r\nimport PortfolioPage from \"./page/PortfolioPage\";\r\nimport sectionConfigs from \"../metadata/sectionConfigs\";\r\nimport {theme} from \"../services/MuiThemeFactory\";\r\n\r\nimport '../css/App.css';\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <MuiThemeProvider theme={theme}>\r\n                <div className=\"App\">\r\n                    <PortfolioPage sectionConfigs={sectionConfigs}/>\r\n                </div>\r\n            </MuiThemeProvider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}