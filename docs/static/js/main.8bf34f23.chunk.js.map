{"version":3,"sources":["components/page/OldVersionLinkButton.tsx","components/page/PageAppBar.tsx","components/page/DrawerItemsWithScrollspy.tsx","components/page/ResponsivePageDrawer.tsx","components/page/PageMain.tsx","components/page/PortfolioPage.tsx","components/common/Section.tsx","components/about/AboutInformation.tsx","components/about/AboutPanel.tsx","components/portfolio/PortfoliosPanel.tsx","components/contact/ContactIcon.tsx","components/contact/ContactPanel.tsx","services/portfolio/CodePenItemContentExtractor.ts","services/portfolio/CodePenItemContentParser.ts","components/portfolio/EmbeddedPenPortfolio.tsx","components/portfolio/EmbeddedPenPortfolios.tsx","components/portfolio/EmbeddedPenPortfoliosFactory.tsx","services/portfolio/LocalCodePenRssFeedsParser.ts","metadata/sectionConfigs.tsx","services/MuiThemeFactory.ts","services/GoogleAnalyticsManager.ts","components/App.tsx","serviceWorker.js","index.tsx"],"names":["OLD_VERSION_URL","withStyles","theme","createStyles","props","react_default","a","createElement","Button_default","href","variant","color","appBar","Object","defineProperty","zIndex","drawer","breakpoints","down","modal","title","flexGrow","textAlign","menuButton","marginRight","up","display","classes","AppBar_default","position","className","Toolbar_default","IconButton_default","aria-label","onClick","onIconButtonClick","Menu_default","Typography_default","noWrap","classNames","Hidden_default","smDown","page_OldVersionLinkButton","root","width","flexShrink","drawerPaper","content","padding","spacing","unit","toolbar","mixins","scrollSpyList","margin","scrollSpyListItem","oldVersionLinkButton","items","Fragment","Scrollspy_default","currentClassName","map","text","index","key","item","concat","replace","toLowerCase","ListItem_default","button","ListItemIcon_default","MoveToInbox_default","Mail_default","ListItemText_default","primary","mdUp","ResponsivePageDrawer","_this$props","this","sectionConfigs","Drawer_default","anchor","direction","open","drawerOpen","onClose","onDrawerClose","paper","drawerContent","page_DrawerItemsWithScrollspy","asItems","versionText","VersionText","Component","config","name","version","process","left","bottom","withTheme","_content","component","Divider_default","PortfolioPage","state","handleDrawerToggle","_this","setState","CssBaseline_default","page_PageAppBar","page_ResponsivePageDrawer","main","page_PageMain","Section","_ref","id","subtitle","hasDivider","children","react","section","header","optionalTypography","optionalTitle","optionalSubtitle","optionalDivider","body","_ref2","paragraph","defaultProps","marginTop","overflowX","table","height","row","palette","secondary","contrastText","divider","backgroundColor","light","Paper_default","Table_default","TableHead_default","dividerRow","TableBody_default","informationMetadatas","group","i","entry","j","TableRow_default","TableCell_default","scope","align","value","common_Section","about_AboutInformation","PortfoliosPanel","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","portfolios","_this2","portfoliosFactory","createPortfolios","then","React","portfolio","icon","metadata","target","rel","src","img","alt","Badges","smUp","contactIcons","badgeMicroMetadatas","xsDown","badgeMetadatas","metadatas","contact_ContactIcon","toString","ImageType","LinkType","icons","flexFlow","justifyContent","alignItems","badges","iconMetadatas","CodePenItemContentParser","$","extractor","extract","rawContent","cheerio","load","credentialsExtractor","firstLink","parts","URL","attribs","pathname","split","user","hash","MAPPING_HEIGHTS","toRenderProps","withWidth","xs","sm","md","lg","xl","embeddedContainer","isScriptLoaded","_contentParser$parseC","newParser","parseContent","lib_default","getHeight","loader","CircularProgress_default","shouldLoadScript","overrideAsLoaded","EmbeddedPenPortfolios","scriptTagBuilder","loaded","CodepenEmbedScriptTagBuilder","setAsync","withOnLoadHandler","withOnErrorHandler","error","parser","parseUrl","rssFeedUrl","appendTo","document","catch","console","log","_this3","_ref$content","_ref$link","link","_ref$title","portfolio_EmbeddedPenPortfolio","EmbeddedPenPortfoliosFactory","Promise","resolve","portfolio_EmbeddedPenPortfolios","LocalCodePenRssFeedsParser","rssParser","rssFeeds","arguments","length","undefined","rssFeedsContent","parseString","output","Error","_context","t0","factory","RssParser","about_AboutPanel","portfolio_PortfoliosPanel","contact_ContactPanel","createMuiTheme","indigo","typography","useNextVariants","overrides","MuiTableRow","head","GoogleAnalyticsManager","_isInitialized","optionalString","isGoogleAnalyticsTrackingEnabled","ReactGA","initialize","path","isInitialized","pageview","warn","App","context","gAManager","init","window","location","search","core_styles","page_PortfolioPage","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","components_App","getElementById","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.8bf34f23.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Theme, withStyles} from '@material-ui/core/styles';\r\nimport {createStyles, WithStyles} from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst styles = (theme: Theme) => createStyles({});\r\n\r\ninterface OldVersionLinkButtonProps extends WithStyles<typeof styles> {\r\n}\r\n\r\nconst OLD_VERSION_URL = \"https://codepen.io/htbkoo/\";\r\n\r\nfunction OldVersionLinkButton(props: OldVersionLinkButtonProps) {\r\n    return (\r\n        <Button href={OLD_VERSION_URL} variant=\"contained\" color=\"inherit\">\r\n            View on CodePen\r\n        </Button>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(OldVersionLinkButton);","import React from 'react';\r\nimport {Theme, withStyles} from '@material-ui/core/styles';\r\nimport {createStyles, WithStyles} from '@material-ui/core';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport classNames from \"classnames\";\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nimport OldVersionLinkButton from \"./OldVersionLinkButton\";\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        [theme.breakpoints.down('sm')]: {\r\n            zIndex: theme.zIndex.modal + 1,\r\n        },\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n        textAlign: \"left\",\r\n    },\r\n    menuButton: {\r\n        marginRight: 20,\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n});\r\n\r\ninterface PageAppBarProps extends WithStyles<typeof styles> {\r\n    onIconButtonClick: () => void\r\n}\r\n\r\nfunction PageAppBar(props: PageAppBarProps) {\r\n    const {classes} = props;\r\n\r\n    return (\r\n        <AppBar position=\"fixed\" className={classes.appBar}>\r\n            <Toolbar>\r\n                <IconButton\r\n                    color=\"inherit\"\r\n                    aria-label=\"Open drawer\"\r\n                    onClick={props.onIconButtonClick}\r\n                    className={classes.menuButton}\r\n                >\r\n                    <MenuIcon/>\r\n                </IconButton>\r\n                <Typography variant=\"h6\" color=\"inherit\" noWrap className={classNames(classes.title)}>\r\n                    Hey's Personal Portfolio\r\n                </Typography>\r\n                <Hidden smDown>\r\n                    <OldVersionLinkButton/>\r\n                </Hidden>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(PageAppBar);","import React from 'react';\r\nimport {Theme, withStyles} from '@material-ui/core/styles';\r\nimport {createStyles, WithStyles} from '@material-ui/core';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport Scrollspy from 'react-scrollspy';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nimport OldVersionLinkButton from \"./OldVersionLinkButton\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing.unit * 3,\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    scrollSpyList: {\r\n        margin: 0,\r\n        padding: 0\r\n    },\r\n    scrollSpyListItem: {\r\n        display: 'flex',\r\n    },\r\n    oldVersionLinkButton: {\r\n        margin: \"5%\"\r\n    }\r\n});\r\n\r\ninterface DrawerItemsWithScrollspyProps extends WithStyles<typeof styles> {\r\n    items: string[],\r\n}\r\n\r\nfunction DrawerItemsWithScrollspy(props: DrawerItemsWithScrollspyProps) {\r\n    const {items, classes} = props;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Scrollspy\r\n                items={items}\r\n                currentClassName=\"is-current\"\r\n                className={classes.scrollSpyList}\r\n            >\r\n                {items.map((text, index) => (\r\n                    <a key={text} href={itemToHref(text)} className={classes.scrollSpyListItem}>\r\n                        <ListItem button>\r\n                            <ListItemIcon>{index % 2 === 0 ? <InboxIcon/> : <MailIcon/>}</ListItemIcon>\r\n                            <ListItemText primary={text}/>\r\n                        </ListItem>\r\n                    </a>\r\n                ))}\r\n            </Scrollspy>\r\n            <Hidden mdUp>\r\n                <div className={classes.oldVersionLinkButton}>\r\n                    <OldVersionLinkButton/>\r\n                </div>\r\n            </Hidden>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nfunction itemToHref(item: string): string {\r\n    return `#${item.replace(/ /g, \"-\").toLowerCase()}`;\r\n}\r\n\r\nexport default withStyles(styles)(DrawerItemsWithScrollspy);","import React, { Component } from 'react';\r\nimport { Theme, withStyles } from '@material-ui/core/styles';\r\nimport { createStyles, WithStyles } from '@material-ui/core';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nimport DrawerItemsWithScrollspy from \"./DrawerItemsWithScrollspy\";\r\nimport SectionMetadata from \"../../model/SectionMetadata\";\r\nimport { version } from \"../../../package.json\"\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    versionText: {\r\n        position: \"absolute\",\r\n        left: \"16px\",\r\n        bottom: \"16px\",\r\n    }\r\n});\r\n\r\ninterface ResponsivePageDrawerProps extends WithStyles<typeof styles, true> {\r\n    sectionConfigs: SectionMetadata[],\r\n    drawerOpen: boolean,\r\n    onDrawerClose: () => void\r\n}\r\n\r\nclass ResponsivePageDrawer extends Component<ResponsivePageDrawerProps> {\r\n    render() {\r\n        const { classes, sectionConfigs, theme } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n                <Hidden mdUp>\r\n                    <Drawer\r\n                        variant=\"temporary\"\r\n                        anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n                        open={this.props.drawerOpen}\r\n                        onClose={this.props.onDrawerClose}\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                    >\r\n                        {drawerContent()}\r\n                    </Drawer>\r\n                </Hidden>\r\n                <Hidden smDown>\r\n                    <Drawer\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                        variant=\"permanent\"\r\n                        open\r\n                    >\r\n                        {drawerContent()}\r\n                    </Drawer>\r\n                </Hidden>\r\n            </React.Fragment>\r\n        );\r\n\r\n        function drawerContent() {\r\n            return (\r\n                <React.Fragment>\r\n                    <div className={classes.toolbar}/>\r\n                    <DrawerItemsWithScrollspy items={asItems(sectionConfigs)}/>\r\n                    <div className={classes.versionText}>\r\n                        <VersionText/>\r\n                    </div>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction asItems(sectionConfigs: SectionMetadata[]): string[] {\r\n    return sectionConfigs.map(config => config.name);\r\n}\r\n\r\nfunction VersionText() {\r\n    return <div>v{version}-{process.env.REACT_APP_GIT_SHA}</div>\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(ResponsivePageDrawer);\r\n","import React from 'react';\r\nimport {Theme, withStyles} from '@material-ui/core/styles';\r\nimport {createStyles, WithStyles} from '@material-ui/core';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport SectionMetadata from \"../../model/SectionMetadata\";\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        [theme.breakpoints.down('xs')]: {\r\n            padding: \"unset\"\r\n        },\r\n        [theme.breakpoints.up('sm')]: {\r\n            padding: theme.spacing.unit * 3\r\n        },\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n});\r\n\r\ninterface PageMainProps extends WithStyles<typeof styles> {\r\n    sectionConfigs: SectionMetadata[]\r\n}\r\n\r\nfunction PageMain(props: PageMainProps) {\r\n    const {classes, sectionConfigs} = props;\r\n\r\n    return (\r\n        <main className={classes.content}>\r\n            <div className={classes.toolbar}/>\r\n\r\n            {sectionConfigs.map(config => (\r\n                <div key={config.name}>\r\n                    {config.component}\r\n                    <Divider/>\r\n                </div>\r\n            ))}\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(PageMain);","import React, { Component } from 'react';\r\nimport { Theme, withStyles } from '@material-ui/core/styles';\r\nimport { createStyles, WithStyles } from '@material-ui/core';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport PageAppBar from \"./PageAppBar\";\r\nimport PageDrawer from \"./ResponsivePageDrawer\";\r\nimport PageMain from \"./PageMain\";\r\nimport SectionMetadata from \"../../model/SectionMetadata\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    drawer: {\r\n        [theme.breakpoints.up('md')]: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n        },\r\n    },\r\n    main: {\r\n        width: \"100%\"\r\n    }\r\n});\r\n\r\ninterface PortfolioPageProps extends WithStyles<typeof styles> {\r\n    sectionConfigs: SectionMetadata[]\r\n}\r\n\r\n\r\ninterface PortfolioPageState {\r\n    drawerOpen: boolean\r\n}\r\n\r\nclass PortfolioPage extends Component<PortfolioPageProps, PortfolioPageState> {\r\n    state = { drawerOpen: false };\r\n\r\n    private handleDrawerToggle = () => this.setState(state => ({ drawerOpen: !state.drawerOpen }));\r\n\r\n    render() {\r\n        const { classes, sectionConfigs } = this.props;\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <CssBaseline/>\r\n                <div>\r\n                    <PageAppBar onIconButtonClick={this.handleDrawerToggle}/>\r\n                </div>\r\n                <nav className={classes.drawer}>\r\n                    <PageDrawer\r\n                        sectionConfigs={sectionConfigs}\r\n                        drawerOpen={this.state.drawerOpen}\r\n                        onDrawerClose={this.handleDrawerToggle}\r\n                    />\r\n                </nav>\r\n                <div className={classes.main}>\r\n                    <PageMain sectionConfigs={sectionConfigs}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(PortfolioPage);\r\n","import * as React from \"react\";\r\nimport {FunctionComponent} from \"react\";\r\nimport {createStyles, Theme, withStyles, WithStyles} from \"@material-ui/core\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport {ThemeStyle} from \"@material-ui/core/styles/createTypography\";\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    section: {\r\n        padding: theme.spacing.unit * 3\r\n    },\r\n    header: {},\r\n    body: {},\r\n});\r\n\r\ninterface SectionProps extends WithStyles<typeof styles> {\r\n    id: string,\r\n    title?: string,\r\n    subtitle?: string,\r\n    hasDivider?: boolean,\r\n}\r\n\r\nconst Section: FunctionComponent<SectionProps> = ({id, title, subtitle, hasDivider, children, classes}) => (\r\n    <div id={id} className={classes.section}>\r\n        <div className={classes.header}>\r\n            {optionalTitle(title)}\r\n            {optionalSubtitle(subtitle)}\r\n        </div>\r\n        {optionalDivider(hasDivider)}\r\n        <div className={classes.body}>\r\n            {children}\r\n        </div>\r\n    </div>\r\n);\r\n\r\nfunction optionalTitle(title?: string) {\r\n    return optionalTypography({text: title, variant: \"h3\"});\r\n}\r\n\r\nfunction optionalSubtitle(subtitle?: string) {\r\n    return optionalTypography({text: subtitle, variant: \"h5\"});\r\n}\r\n\r\ntype Variant = ThemeStyle | 'srOnly' | 'inherit';\r\n\r\nfunction optionalTypography({text, variant}: { text?: string, variant: Variant }) {\r\n    return text\r\n        ? <Typography variant={variant} paragraph>{text}</Typography>\r\n        : \"\";\r\n}\r\n\r\nfunction optionalDivider(hasDivider?: boolean) {\r\n    return hasDivider\r\n        ? <Divider/>\r\n        : \"\";\r\n}\r\n\r\nSection.defaultProps = {\r\n    hasDivider: false\r\n};\r\n\r\nexport default withStyles(styles)(Section);","import * as React from \"react\";\r\nimport {createStyles, Theme, withStyles, WithStyles} from \"@material-ui/core\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport informationMetadatas from \"../../metadata/about/information.json\";\r\nimport AboutEntry from \"../../model/AboutEntry\";\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    root: {\r\n        // width: '100%',\r\n        marginTop: theme.spacing.unit * 3,\r\n        overflowX: 'auto',\r\n    },\r\n    table: {\r\n        height: \"auto\"\r\n        // minWidth: 700,\r\n    },\r\n    row: {\r\n        color: theme.palette.secondary.contrastText,\r\n        height: theme.spacing.unit * 4,\r\n    },\r\n    divider: {\r\n        backgroundColor: theme.palette.secondary.light,\r\n        color: theme.palette.secondary.contrastText\r\n    }\r\n});\r\n\r\ninterface AboutInformationProps extends WithStyles<typeof styles> {\r\n}\r\n\r\nfunction AboutInformation(props: AboutInformationProps) {\r\n    const {classes} = props;\r\n    return (\r\n        <Paper className={classes.root}>\r\n            <Table className={classes.table}>\r\n                <TableHead>\r\n                    {dividerRow()}\r\n                </TableHead>\r\n                <TableBody>\r\n                    {(informationMetadatas as AboutEntry[][]).map(toTableGroups)}\r\n                </TableBody>\r\n            </Table>\r\n        </Paper>\r\n    );\r\n\r\n    function toTableGroups(group: AboutEntry[], i: number) {\r\n        return (\r\n            <React.Fragment key={i}>\r\n                {group.map(toRow)}\r\n                {dividerRow()}\r\n            </React.Fragment>\r\n        );\r\n\r\n        function toRow(entry: AboutEntry, j: number) {\r\n            return (\r\n                <TableRow key={`${i}_${j}_${entry.key}`} className={classes.row}>\r\n                    <TableCell component=\"th\" scope=\"row\" align=\"right\">\r\n                        <strong>{entry.key}</strong>\r\n                    </TableCell>\r\n                    <TableCell align=\"left\">\r\n                        <span>{entry.value}</span>\r\n                    </TableCell>\r\n                </TableRow>\r\n            );\r\n        }\r\n    }\r\n\r\n    function dividerRow() {\r\n        return (\r\n            <TableRow className={classes.divider}>\r\n                <TableCell/>\r\n                <TableCell/>\r\n            </TableRow>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(AboutInformation);\r\n\r\n","import * as React from \"react\";\r\nimport {createStyles, Theme, withStyles, WithStyles} from \"@material-ui/core\";\r\n\r\nimport Section from \"../common/Section\";\r\nimport AboutInformation from \"./AboutInformation\";\r\n\r\nconst styles = (theme: Theme) => createStyles({});\r\n\r\ninterface AboutPanelProps extends WithStyles<typeof styles> {\r\n}\r\n\r\nfunction AboutPanel(props: AboutPanelProps) {\r\n    return (\r\n        <Section\r\n            id=\"about\"\r\n            hasDivider={false}\r\n            title=\"About\"\r\n            subtitle=\"Some information about myself\"\r\n        >\r\n            <AboutInformation/>\r\n        </Section>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(AboutPanel);","import * as React from \"react\";\r\nimport {createStyles, Theme, withStyles, WithStyles} from \"@material-ui/core\";\r\n\r\nimport Section from \"../common/Section\";\r\nimport {PortfoliosFactory} from \"./PortfoliosFactory\";\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    portfolio: {\r\n        margin: \"5%\"\r\n    }\r\n});\r\n\r\ninterface PortfoliosPanelProps extends WithStyles<typeof styles> {\r\n    portfoliosFactory: PortfoliosFactory\r\n}\r\n\r\ninterface PortfoliosPanelState {\r\n    portfolios: React.ReactNode\r\n}\r\n\r\nclass PortfoliosPanel extends React.Component<PortfoliosPanelProps, PortfoliosPanelState> {\r\n    constructor(props: Readonly<PortfoliosPanelProps>) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            portfolios: []\r\n        };\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        this.props.portfoliosFactory.createPortfolios()\r\n            .then(portfolios => this.setState({portfolios}))\r\n    }\r\n\r\n    render(): React.ReactNode {\r\n        return (\r\n            <Section\r\n                id=\"portfolio\"\r\n                hasDivider={true}\r\n                title=\"Portfolio\"\r\n                subtitle=\"Some of my previous works\"\r\n            >\r\n                <div>\r\n                    {this.state.portfolios}\r\n                </div>\r\n            </Section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(PortfoliosPanel);","import * as React from \"react\";\r\nimport {createStyles, Theme, withStyles, WithStyles} from \"@material-ui/core\";\r\nimport ContactMetadata from \"../../model/ContactMetadata\";\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    icon: {\r\n        padding: theme.spacing.unit * 2,\r\n    }\r\n});\r\n\r\ninterface ContactIconProps extends WithStyles<typeof styles> {\r\n    metadata: ContactMetadata\r\n}\r\n\r\nfunction ContactIcon(props: ContactIconProps) {\r\n    const {classes, metadata} = props;\r\n    return (\r\n        <div className={classes.icon}>\r\n            <a href={metadata.href} target=\"_blank\" rel=\"noopener\">\r\n                <img\r\n                    src={metadata.img.src}\r\n                    alt={metadata.img.alt}/>\r\n            </a>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(ContactIcon);","import * as React from \"react\";\r\nimport {createStyles, Theme, withStyles, WithStyles} from \"@material-ui/core\";\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nimport ContactIcon from \"./ContactIcon\";\r\n\r\nimport iconMetadatas from \"../../metadata/contact/icons.json\";\r\nimport badgeMetadatas from \"../../metadata/contact/badges.json\";\r\nimport badgeMicroMetadatas from \"../../metadata/contact/badges_micro.json\";\r\nimport ContactMetadata from \"../../model/ContactMetadata\";\r\nimport Section from \"../common/Section\";\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    icons: {\r\n        padding: theme.spacing.unit * 3,\r\n        display: \"flex\",\r\n        flexFlow: \"wrap\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"baseline\"\r\n    },\r\n    badges: {}\r\n});\r\n\r\ninterface ContactPanelProps extends WithStyles<typeof styles> {\r\n}\r\n\r\nfunction ContactPanel(props: ContactPanelProps) {\r\n    const {classes} = props;\r\n    return (\r\n        <Section\r\n            id=\"contact\"\r\n            hasDivider={true}\r\n            title=\"Contact\"\r\n            subtitle=\"Check me out at the following!\"\r\n        >\r\n            <div className={classes.icons}>\r\n                {contactIcons(iconMetadatas)}\r\n            </div>\r\n            <div className={classes.badges}>\r\n                <Badges/>\r\n            </div>\r\n        </Section>\r\n    );\r\n}\r\n\r\nfunction Badges() {\r\n    return (\r\n        <React.Fragment>\r\n            <Hidden smUp>\r\n                {contactIcons(badgeMicroMetadatas)}\r\n            </Hidden>\r\n            <Hidden xsDown>\r\n                {contactIcons(badgeMetadatas)}\r\n            </Hidden>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nfunction contactIcons(metadatas: ContactMetadata[]) {\r\n    return metadatas.map((metadata, i) => (\r\n        <ContactIcon key={`${i.toString()}_${metadata.img.alt}`} metadata={metadata}/>\r\n    ));\r\n}\r\n\r\nexport default withStyles(styles)(ContactPanel);","enum ImageType {\r\n    screenshot = \"screenshot\"\r\n}\r\n\r\nenum LinkType {\r\n    pen = \"code\", full = \"full\", details = \"details\"\r\n}\r\n\r\nexport interface Content {\r\n    img: { [type in ImageType]?: Partial<HTMLImageElement> },\r\n    links: { [type in LinkType]?: string },\r\n    technologies: string[],\r\n    credentials: {\r\n        user: string,\r\n        hash: string\r\n    }\r\n}\r\n\r\nexport default interface CodePenItemContentExtractor<ContentType extends keyof Content> {\r\n    key: string,\r\n    extract: ($: CheerioStatic) => Content[ContentType]\r\n}\r\n\r\nconst imgExtractor: CodePenItemContentExtractor<\"img\"> = {\r\n    key: \"img\",\r\n    extract: $ => ({[ImageType.screenshot]: $(\"img\")[0].attribs})\r\n};\r\n\r\nconst linksExtractor: CodePenItemContentExtractor<\"links\"> = {\r\n    key: \"links\",\r\n    extract: $ => {\r\n        const elements = $(\"a\");\r\n        const distinctLinks: string[] = Array.from(new Set(Array.from(elements).map((element: any) => element.attribs.href)));\r\n        return Object.keys(LinkType).reduce(toLinksObject, {});\r\n\r\n        function toLinksObject(obj, part: string) {\r\n            const matchedElement = distinctLinks.find(pathWith(part));\r\n            if (matchedElement) {\r\n                const linkType = LinkType[part];\r\n                obj[linkType] = matchedElement;\r\n            }\r\n            return obj;\r\n        }\r\n\r\n        function pathWith(part: string): (path: string) => boolean {\r\n            return path => path.indexOf(`/${part}/`) !== -1;\r\n        }\r\n    }\r\n};\r\n\r\nconst REGEX_PATTERN = /This Pen uses: (.+)/;\r\n\r\nconst technologiesExtractor: CodePenItemContentExtractor<\"technologies\"> = {\r\n    key: \"technologies\",\r\n    extract: $ => {\r\n        const elements = $(\"small\");\r\n        const sentence = elements[0].children[0].data;\r\n        if (sentence) {\r\n            const matchResult = REGEX_PATTERN.exec(sentence);\r\n            if (matchResult && matchResult[1]) {\r\n                return matchResult[1].split(\",\")\r\n                    .map(s => s.trim())\r\n                    .filter(s => \"and\" !== s);\r\n            }\r\n        }\r\n        // TODO: add test\r\n        console.debug(`Unable to extract technologies from '${sentence}'`);\r\n        return [];\r\n    }\r\n};\r\n\r\nconst credentialsExtractor: CodePenItemContentExtractor<\"credentials\"> = {\r\n    key: \"credentials\",\r\n    extract: $ => {\r\n        const elements = $(\"a\");\r\n        const firstLink = elements[0];\r\n        const penUrl = new URL(firstLink.attribs.href);\r\n        const pathname = penUrl.pathname;\r\n        const parts = pathname.split(\"/\");\r\n\r\n        return {\r\n            user: parts[1],\r\n            hash: parts[3],\r\n        };\r\n    }\r\n};\r\n\r\nexport {imgExtractor, linksExtractor, technologiesExtractor, credentialsExtractor};","import cheerio from \"cheerio\";\r\nimport CodePenItemContentExtractor, {Content} from \"./CodePenItemContentExtractor\";\r\n\r\nexport default class CodePenItemContentParser {\r\n    private readonly $: CheerioStatic;\r\n\r\n    private constructor($: CheerioStatic) {\r\n        this.$ = $;\r\n    }\r\n\r\n    public static newParser(rawContent: string): CodePenItemContentParser {\r\n        const $ = cheerio.load(rawContent);\r\n        return new CodePenItemContentParser($);\r\n    }\r\n\r\n    parseContent<T extends keyof Content>(extractor: CodePenItemContentExtractor<T>): Content[T] {\r\n        return extractor.extract(this.$);\r\n    }\r\n}\r\n","import * as React from \"react\";\r\nimport {createStyles, Theme, withStyles, WithStyles} from \"@material-ui/core\";\r\nimport {Breakpoint} from '@material-ui/core/styles/createBreakpoints';\r\nimport CodePen from \"ts-react-codepen-embed\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport withWidth from \"@material-ui/core/withWidth\";\r\nimport toRenderProps from 'recompose/toRenderProps';\r\n\r\nimport {PortfolioProps} from \"./PortfolioProps\";\r\nimport CodePenItemContentParser from \"../../services/portfolio/CodePenItemContentParser\";\r\nimport {credentialsExtractor} from \"../../services/portfolio/CodePenItemContentExtractor\";\r\n\r\nconst WithWidth = toRenderProps(withWidth());\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    embeddedContainer: {\r\n        margin: \"5%\"\r\n    }\r\n});\r\n\r\ninterface EmbeddedPenPortfolioProps extends PortfolioProps, WithStyles<typeof styles> {\r\n    isScriptLoaded?: boolean\r\n}\r\n\r\nconst MAPPING_HEIGHTS: { [b in Breakpoint]: number } = {\r\n    xs: 288,\r\n    sm: 384,\r\n    md: 384,\r\n    lg: 640,\r\n    xl: 768,\r\n};\r\n\r\nfunction EmbeddedPenPortfolio(props: EmbeddedPenPortfolioProps) {\r\n    const {title, content, isScriptLoaded, classes} = props;\r\n    const contentParser = CodePenItemContentParser.newParser(content);\r\n    const {user, hash} = contentParser.parseContent(credentialsExtractor);\r\n\r\n    return (\r\n        <div className={classes.embeddedContainer}>\r\n            <CodePen\r\n                user={user}\r\n                hash={hash}\r\n                title={title}\r\n                height={getHeight()}\r\n                loader={() => <CircularProgress/>}\r\n                shouldLoadScript={false}\r\n                overrideAsLoaded={isScriptLoaded}\r\n            />\r\n        </div>\r\n    );\r\n\r\n    function getHeight() {\r\n        const width: Breakpoint = (props as any).width;\r\n        return MAPPING_HEIGHTS[width];\r\n    }\r\n}\r\n\r\nexport default withWidth()(withStyles(styles)(EmbeddedPenPortfolio));","import * as React from \"react\";\r\nimport {createStyles, Theme, WithStyles, withStyles} from \"@material-ui/core\";\r\nimport {Items} from \"rss-parser\";\r\nimport {CodepenEmbedScriptTagBuilder, ScriptTagBuilder} from \"ts-react-codepen-embed\";\r\n\r\nimport RssFeedsParser from \"../../services/portfolio/RssFeedsParser\";\r\nimport EmbeddedPenPortfolio from \"./EmbeddedPenPortfolio\";\r\n\r\nconst styles = (theme: Theme) => createStyles({});\r\n\r\ninterface Props extends WithStyles<typeof styles> {\r\n    parser: RssFeedsParser;\r\n    rssFeedUrl: string;\r\n}\r\n\r\ninterface State {\r\n    items: Items[],\r\n    loaded: boolean,\r\n    error?: string,\r\n}\r\n\r\nclass EmbeddedPenPortfolios extends React.Component<Props, State> {\r\n    private scriptTagBuilder: ScriptTagBuilder;\r\n\r\n    constructor(props: Readonly<Props>) {\r\n        super(props);\r\n        this.state = {loaded: false, items: []};\r\n\r\n        this.scriptTagBuilder = new CodepenEmbedScriptTagBuilder()\r\n            .setAsync(true)\r\n            .withOnLoadHandler(() => this.setState({loaded: true,}))\r\n            .withOnErrorHandler(() => this.setState({error: 'Failed to load the pen'}));\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        this.props.parser.parseUrl(this.props.rssFeedUrl)\r\n            .then(items => this.setState({items}))\r\n            .then(() => this.scriptTagBuilder.appendTo(document.body))\r\n            .catch(error => console.log(error));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.items.map(({content = \"\", link = \"\", title = \"\"}: Items, index: number) =>\r\n                    (<EmbeddedPenPortfolio\r\n                        key={`${index}_${title}`}\r\n                        content={content}\r\n                        link={link}\r\n                        title={title}\r\n                        isScriptLoaded={this.state.loaded}\r\n                    />)\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(EmbeddedPenPortfolios);","import * as React from \"react\";\r\nimport {CodepenEmbedScriptTagBuilder, ScriptTagBuilder} from \"ts-react-codepen-embed\";\r\n\r\nimport RssFeedsParser from \"../../services/portfolio/RssFeedsParser\";\r\nimport {PortfoliosFactory} from \"./PortfoliosFactory\";\r\nimport EmbeddedPenPortfolios from \"./EmbeddedPenPortfolios\";\r\n\r\nexport default class EmbeddedPenPortfoliosFactory implements PortfoliosFactory {\r\n    private readonly parser: RssFeedsParser;\r\n    private readonly rssFeedUrl: string;\r\n\r\n    constructor(parser: RssFeedsParser, rssFeedUrl: string) {\r\n        this.parser = parser;\r\n        this.rssFeedUrl = rssFeedUrl;\r\n    }\r\n\r\n    createPortfolios() {\r\n        return Promise.resolve(<EmbeddedPenPortfolios parser={this.parser} rssFeedUrl={this.rssFeedUrl}/>);\r\n    }\r\n}","import RssFeedsParser from \"./RssFeedsParser\";\r\nimport {RssParser} from \"./RssParser\";\r\nimport {rssFeedsContent} from \"../../metadata/portfolios/rssFeeds.json\";\r\n\r\nexport default class LocalCodePenRssFeedsParser implements RssFeedsParser {\r\n    private readonly rssParser: RssParser;\r\n    private rssFeeds: string;\r\n\r\n    constructor(rssParser: RssParser, rssFeeds: string = rssFeedsContent) {\r\n        this.rssParser = rssParser;\r\n        this.rssFeeds = rssFeeds;\r\n    }\r\n\r\n    async parseUrl() {\r\n        let output;\r\n\r\n        try {\r\n            output = await this.rssParser.parseString(this.rssFeeds);\r\n        } catch (e) {\r\n            throw new Error(`Unable to read or parse rssFeedsString due to: '${e}'`);\r\n        }\r\n\r\n        if (output && output.items) {\r\n            return output.items;\r\n        } else {\r\n            throw new Error(`Missing 'items' from the parsed output: '${this.rssFeeds}'`);\r\n        }\r\n    }\r\n}\r\n","import React from 'react';\r\nimport RssParser from \"rss-parser\";\r\n\r\nimport SectionMetadata from \"../model/SectionMetadata\";\r\n// import HomePanel from \"../components/home/HomePanel\";\r\nimport AboutPanel from \"../components/about/AboutPanel\";\r\nimport PortfoliosPanel from \"../components/portfolio/PortfoliosPanel\";\r\nimport ContactPanel from \"../components/contact/ContactPanel\";\r\nimport EmbeddedPenPortfoliosFactory from \"../components/portfolio/EmbeddedPenPortfoliosFactory\";\r\nimport LocalCodePenRssFeedsParser from \"../services/portfolio/LocalCodePenRssFeedsParser\";\r\n\r\nconst CORS_PROXY = \"https://cors-anywhere.herokuapp.com\";\r\nconst rssFeedUrl = `${CORS_PROXY}/https://codepen.io/collection/neBvQa/feed`;\r\nconst factory = new EmbeddedPenPortfoliosFactory(new LocalCodePenRssFeedsParser(new RssParser()), rssFeedUrl);\r\n\r\nconst sectionConfigs: SectionMetadata[] = [\r\n    // {\r\n    //     name: 'Home',\r\n    //     component: <HomePanel/>\r\n    // },\r\n    {\r\n        name: 'About',\r\n        component: <AboutPanel/>\r\n    },\r\n    {\r\n        name: 'Portfolio',\r\n        component: <PortfoliosPanel portfoliosFactory={factory}/>\r\n    },\r\n    {\r\n        name: 'Contact',\r\n        component: <ContactPanel/>\r\n    },\r\n];\r\n\r\nexport default sectionConfigs;","import {createMuiTheme} from '@material-ui/core/styles';\r\nimport {indigo} from \"@material-ui/core/colors\";\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: indigo,\r\n        secondary: {main: '#e6f0fe',},\r\n    },\r\n    typography: {\r\n        useNextVariants: true,\r\n    },\r\n    overrides: {\r\n        MuiTableRow: {\r\n            root: { //for the body\r\n                height: \"100%\"\r\n            },\r\n            head: { //for the head\r\n                height: \"100%\"\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nexport {theme};","import ReactGA from 'react-ga';\r\n\r\nexport default class GoogleAnalyticsManager {\r\n    private _isInitialized: boolean = false;\r\n\r\n    public init() {\r\n        const isGoogleAnalyticsTrackingEnabled = isTrue(process.env.REACT_APP_GOOGLE_ANALYTICS_TRACKING_ENABLED);\r\n        const trackingId = process.env.REACT_APP_GOOGLE_ANALYTICS_TRACKING_ID;\r\n\r\n        if (isGoogleAnalyticsTrackingEnabled && trackingId) {\r\n            console.log(\"Google Analytics tracking is enabled and trackingId is defined, initializing Google Analytics module now\");\r\n            ReactGA.initialize(trackingId);\r\n            this._isInitialized = true;\r\n        } else {\r\n            if (!isGoogleAnalyticsTrackingEnabled) {\r\n                console.log(\"Google Analytics tracking is disabled and trackingId is defined, thus not initializing\");\r\n            } else {\r\n                console.log(\"Google Analytics trackingId is not defined, thus not initializing\");\r\n            }\r\n        }\r\n    }\r\n\r\n    public pageview(path: string) {\r\n        if (this.isInitialized()) {\r\n            console.log(`pageview at path: ${path}`);\r\n            ReactGA.pageview(path);\r\n        } else {\r\n            console.warn(`Not initialized - not going to set pageview for path: \"${path}\"`);\r\n        }\r\n    }\r\n\r\n    public isInitialized(): boolean {\r\n        return this._isInitialized;\r\n    }\r\n}\r\n\r\nfunction isTrue(optionalString?: string): boolean {\r\n    return (typeof optionalString !== \"undefined\") && (\"true\" === optionalString.toLowerCase());\r\n}","import React, {Component} from 'react';\r\nimport {MuiThemeProvider} from '@material-ui/core/styles';\r\n\r\nimport PortfolioPage from \"./page/PortfolioPage\";\r\nimport sectionConfigs from \"../metadata/sectionConfigs\";\r\nimport {theme} from \"../services/MuiThemeFactory\";\r\n\r\nimport '../css/App.css';\r\nimport GoogleAnalyticsManager from \"../services/GoogleAnalyticsManager\";\r\n\r\ninterface Props {\r\n}\r\n\r\nclass App extends Component<Props> {\r\n    private readonly gAManager: GoogleAnalyticsManager = new GoogleAnalyticsManager();\r\n\r\n    constructor(props: Readonly<Props>);\r\n    constructor(props: Props, context?: any);\r\n    constructor(props: Props | Readonly<Props>, context?: any) {\r\n        super(props, context);\r\n        this.gAManager.init();\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        const path = window.location.pathname + window.location.search;\r\n        this.gAManager.pageview(path);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <MuiThemeProvider theme={theme}>\r\n                <div className=\"App\">\r\n                    <PortfolioPage sectionConfigs={sectionConfigs}/>\r\n                </div>\r\n            </MuiThemeProvider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import \"./utils/polyfills\";\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}