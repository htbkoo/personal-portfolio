{"version":3,"sources":["components/page/OldVersionLinkButton.tsx","components/page/PageAppBar.tsx","components/page/DrawerItemsWithScrollspy.tsx","components/page/ResponsivePageDrawer.tsx","components/page/PageMain.tsx","components/page/PortfolioPage.tsx","components/common/Section.tsx","components/about/AboutInformation.tsx","components/about/AboutPanel.tsx","components/portfolio/PortfoliosPanel.tsx","components/contact/ContactIcon.tsx","components/contact/ContactPanel.tsx","services/portfolio/CodePenItemContentExtractor.ts","services/portfolio/CodePenItemContentParser.ts","components/portfolio/EmbeddedPenPortfolio.tsx","components/portfolio/EmbeddedPenPortfolios.tsx","metadata/sectionConfigs.tsx","components/portfolio/EmbeddedPenPortfoliosFactory.tsx","services/portfolio/LocalCodePenRssFeedsParser.ts","services/MuiThemeFactory.ts","services/GoogleAnalyticsManager.ts","components/App.tsx","serviceWorker.js","index.tsx"],"names":["withStyles","theme","createStyles","props","Button","href","variant","color","appBar","zIndex","drawer","breakpoints","down","modal","title","flexGrow","textAlign","menuButton","marginRight","up","display","classes","AppBar","position","className","Toolbar","IconButton","aria-label","onClick","onIconButtonClick","Typography","noWrap","classNames","Hidden","smDown","root","width","flexShrink","drawerPaper","content","padding","spacing","toolbar","mixins","scrollSpyList","margin","scrollSpyListItem","oldVersionLinkButton","items","Fragment","currentClassName","map","text","index","key","item","replace","toLowerCase","ListItem","button","ListItemIcon","ListItemText","primary","mdUp","ResponsivePageDrawer","Component","render","this","sectionConfigs","Drawer","anchor","direction","open","drawerOpen","onClose","onDrawerClose","paper","drawerContent","asItems","versionText","VersionText","config","name","version","process","left","bottom","withTheme","component","Divider","PortfolioPage","state","handleDrawerToggle","setState","CssBaseline","main","Section","id","subtitle","hasDivider","children","section","header","optionalTypography","optionalTitle","optionalSubtitle","optionalDivider","body","paragraph","defaultProps","marginTop","overflowX","table","height","row","palette","secondary","contrastText","divider","backgroundColor","light","Paper","Table","TableHead","dividerRow","TableBody","informationMetadatas","group","i","entry","j","TableRow","TableCell","scope","align","value","PortfoliosPanel","React","constructor","super","portfolios","componentDidMount","portfoliosFactory","createPortfolios","then","portfolio","icon","metadata","target","rel","src","img","alt","Badges","smUp","contactIcons","badgeMicroMetadatas","xsDown","badgeMetadatas","metadatas","toString","ImageType","LinkType","icons","flexFlow","justifyContent","alignItems","badges","iconMetadatas","CodePenItemContentParser","$","rawContent","cheerio","load","parseContent","extractor","extract","credentialsExtractor","firstLink","parts","URL","attribs","pathname","split","user","hash","MAPPING_HEIGHTS","xs","sm","md","lg","xl","withWidth","embeddedContainer","isScriptLoaded","newParser","getHeight","loader","CircularProgress","shouldLoadScript","overrideAsLoaded","EmbeddedPenPortfolios","scriptTagBuilder","loaded","CodepenEmbedScriptTagBuilder","setAsync","withOnLoadHandler","withOnErrorHandler","error","parser","parseUrl","rssFeedUrl","appendTo","document","catch","console","log","link","factory","Promise","resolve","rssParser","rssFeeds","rssFeedsContent","parseString","output","Error","RssParser","createMuiTheme","indigo","typography","overrides","MuiTableRow","head","GoogleAnalyticsManager","_isInitialized","init","isGoogleAnalyticsTrackingEnabled","isTrue","testMode","ReactGA","initialize","pageview","path","isInitialized","warn","optionalString","App","context","gAManager","window","location","search","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","getElementById","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.fb7b81cc.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Theme, withStyles} from '@material-ui/core/styles';\r\nimport {createStyles, WithStyles} from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst styles = (theme: Theme) => createStyles({});\r\n\r\ninterface OldVersionLinkButtonProps extends WithStyles<typeof styles> {\r\n}\r\n\r\nconst OLD_VERSION_URL = \"https://codepen.io/htbkoo/\";\r\n\r\nfunction OldVersionLinkButton(props: OldVersionLinkButtonProps) {\r\n    return (\r\n        <Button href={OLD_VERSION_URL} variant=\"contained\" color=\"inherit\">\r\n            View on CodePen\r\n        </Button>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(OldVersionLinkButton);","import React from 'react';\r\nimport {Theme, withStyles} from '@material-ui/core/styles';\r\nimport {createStyles, WithStyles} from '@material-ui/core';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport classNames from \"classnames\";\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nimport OldVersionLinkButton from \"./OldVersionLinkButton\";\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        [theme.breakpoints.down('sm')]: {\r\n            zIndex: theme.zIndex.modal + 1,\r\n        },\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n        textAlign: \"left\",\r\n    },\r\n    menuButton: {\r\n        marginRight: 20,\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n});\r\n\r\ninterface PageAppBarProps extends WithStyles<typeof styles> {\r\n    onIconButtonClick: () => void\r\n}\r\n\r\nfunction PageAppBar(props: PageAppBarProps) {\r\n    const {classes} = props;\r\n\r\n    return (\r\n        <AppBar position=\"fixed\" className={classes.appBar}>\r\n            <Toolbar>\r\n                <IconButton\r\n                    color=\"inherit\"\r\n                    aria-label=\"Open drawer\"\r\n                    onClick={props.onIconButtonClick}\r\n                    className={classes.menuButton}\r\n                >\r\n                    <MenuIcon/>\r\n                </IconButton>\r\n                <Typography variant=\"h6\" color=\"inherit\" noWrap className={classNames(classes.title)}>\r\n                    Hey's Personal Portfolio\r\n                </Typography>\r\n                <Hidden smDown>\r\n                    <OldVersionLinkButton/>\r\n                </Hidden>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(PageAppBar);","import React from 'react';\nimport {Theme, withStyles} from '@material-ui/core/styles';\nimport {createStyles, WithStyles} from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport Scrollspy from 'react-scrollspy';\nimport Hidden from '@material-ui/core/Hidden';\n\nimport OldVersionLinkButton from \"./OldVersionLinkButton\";\n\nconst drawerWidth = 240;\n\nconst styles = (theme: Theme) => createStyles({\n    root: {\n        display: 'flex',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n    toolbar: theme.mixins.toolbar,\n    scrollSpyList: {\n        margin: 0,\n        padding: 0\n    },\n    scrollSpyListItem: {\n        display: 'flex',\n    },\n    oldVersionLinkButton: {\n        margin: \"5%\"\n    }\n});\n\ninterface DrawerItemsWithScrollspyProps extends WithStyles<typeof styles> {\n    items: string[],\n}\n\nfunction DrawerItemsWithScrollspy(props: DrawerItemsWithScrollspyProps) {\n    const {items, classes} = props;\n\n    return (\n        <React.Fragment>\n            <Scrollspy\n                items={items}\n                currentClassName=\"is-current\"\n                className={classes.scrollSpyList}\n            >\n                {items.map((text, index) => (\n                    <a key={text} href={itemToHref(text)} className={classes.scrollSpyListItem}>\n                        <ListItem button>\n                            <ListItemIcon>{index % 2 === 0 ? <InboxIcon/> : <MailIcon/>}</ListItemIcon>\n                            <ListItemText primary={text}/>\n                        </ListItem>\n                    </a>\n                ))}\n            </Scrollspy>\n            <Hidden mdUp>\n                <div className={classes.oldVersionLinkButton}>\n                    <OldVersionLinkButton/>\n                </div>\n            </Hidden>\n        </React.Fragment>\n    );\n}\n\nfunction itemToHref(item: string): string {\n    return `#${item.replace(/ /g, \"-\").toLowerCase()}`;\n}\n\nexport default withStyles(styles)(DrawerItemsWithScrollspy);\n","import React, { Component } from 'react';\r\nimport { Theme, withStyles } from '@material-ui/core/styles';\r\nimport { createStyles, WithStyles } from '@material-ui/core';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nimport DrawerItemsWithScrollspy from \"./DrawerItemsWithScrollspy\";\r\nimport SectionMetadata from \"../../model/SectionMetadata\";\r\nimport { version } from \"../../../package.json\"\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    versionText: {\r\n        position: \"absolute\",\r\n        left: \"16px\",\r\n        bottom: \"16px\",\r\n    }\r\n});\r\n\r\ninterface ResponsivePageDrawerProps extends WithStyles<typeof styles, true> {\r\n    sectionConfigs: SectionMetadata[],\r\n    drawerOpen: boolean,\r\n    onDrawerClose: () => void\r\n}\r\n\r\nclass ResponsivePageDrawer extends Component<ResponsivePageDrawerProps> {\r\n    render() {\r\n        const { classes, sectionConfigs, theme } = this.props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n                <Hidden mdUp>\r\n                    <Drawer\r\n                        variant=\"temporary\"\r\n                        anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n                        open={this.props.drawerOpen}\r\n                        onClose={this.props.onDrawerClose}\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                    >\r\n                        {drawerContent()}\r\n                    </Drawer>\r\n                </Hidden>\r\n                <Hidden smDown>\r\n                    <Drawer\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                        variant=\"permanent\"\r\n                        open\r\n                    >\r\n                        {drawerContent()}\r\n                    </Drawer>\r\n                </Hidden>\r\n            </React.Fragment>\r\n        );\r\n\r\n        function drawerContent() {\r\n            return (\r\n                <React.Fragment>\r\n                    <div className={classes.toolbar}/>\r\n                    <DrawerItemsWithScrollspy items={asItems(sectionConfigs)}/>\r\n                    <div className={classes.versionText}>\r\n                        <VersionText/>\r\n                    </div>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction asItems(sectionConfigs: SectionMetadata[]): string[] {\r\n    return sectionConfigs.map(config => config.name);\r\n}\r\n\r\nfunction VersionText() {\r\n    return <div>v{version}-{process.env.REACT_APP_GIT_SHA}</div>\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(ResponsivePageDrawer);\r\n","import React from 'react';\nimport {Theme, withStyles} from '@material-ui/core/styles';\nimport {createStyles, WithStyles} from '@material-ui/core';\nimport Divider from '@material-ui/core/Divider';\nimport SectionMetadata from \"../../model/SectionMetadata\";\n\nconst styles = (theme: Theme) => createStyles({\n    root: {\n        display: 'flex',\n    },\n    content: {\n        flexGrow: 1,\n        [theme.breakpoints.down('xs')]: {\n            padding: \"unset\"\n        },\n        [theme.breakpoints.up('sm')]: {\n            padding: theme.spacing(3)\n        },\n    },\n    toolbar: theme.mixins.toolbar,\n});\n\ninterface PageMainProps extends WithStyles<typeof styles> {\n    sectionConfigs: SectionMetadata[]\n}\n\nfunction PageMain(props: PageMainProps) {\n    const {classes, sectionConfigs} = props;\n\n    return (\n        <main className={classes.content}>\n            <div className={classes.toolbar}/>\n\n            {sectionConfigs.map(config => (\n                <div key={config.name}>\n                    {config.component}\n                    <Divider/>\n                </div>\n            ))}\n        </main>\n    );\n}\n\nexport default withStyles(styles)(PageMain);\n","import React, { Component } from 'react';\r\nimport { Theme, withStyles } from '@material-ui/core/styles';\r\nimport { createStyles, WithStyles } from '@material-ui/core';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport PageAppBar from \"./PageAppBar\";\r\nimport PageDrawer from \"./ResponsivePageDrawer\";\r\nimport PageMain from \"./PageMain\";\r\nimport SectionMetadata from \"../../model/SectionMetadata\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    drawer: {\r\n        [theme.breakpoints.up('md')]: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n        },\r\n    },\r\n    main: {\r\n        width: \"100%\"\r\n    }\r\n});\r\n\r\ninterface PortfolioPageProps extends WithStyles<typeof styles> {\r\n    sectionConfigs: SectionMetadata[]\r\n}\r\n\r\n\r\ninterface PortfolioPageState {\r\n    drawerOpen: boolean\r\n}\r\n\r\nclass PortfolioPage extends Component<PortfolioPageProps, PortfolioPageState> {\r\n    state = { drawerOpen: false };\r\n\r\n    private handleDrawerToggle = () => this.setState(state => ({ drawerOpen: !state.drawerOpen }));\r\n\r\n    render() {\r\n        const { classes, sectionConfigs } = this.props;\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <CssBaseline/>\r\n                <div>\r\n                    <PageAppBar onIconButtonClick={this.handleDrawerToggle}/>\r\n                </div>\r\n                <nav className={classes.drawer}>\r\n                    <PageDrawer\r\n                        sectionConfigs={sectionConfigs}\r\n                        drawerOpen={this.state.drawerOpen}\r\n                        onDrawerClose={this.handleDrawerToggle}\r\n                    />\r\n                </nav>\r\n                <div className={classes.main}>\r\n                    <PageMain sectionConfigs={sectionConfigs}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(PortfolioPage);\r\n","import * as React from \"react\";\nimport {FunctionComponent} from \"react\";\nimport { createStyles, Theme, TypographyTypeMap, withStyles, WithStyles } from \"@material-ui/core\";\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\n\nconst styles = (theme: Theme) => createStyles({\n    section: {\n        padding: theme.spacing(3)\n    },\n    header: {},\n    body: {},\n});\n\ninterface SectionProps extends WithStyles<typeof styles> {\n    id: string,\n    title?: string,\n    subtitle?: string,\n    hasDivider?: boolean,\n}\n\nconst Section: FunctionComponent<SectionProps> = ({id, title, subtitle, hasDivider, children, classes}) => (\n    <div id={id} className={classes.section}>\n        <div className={classes.header}>\n            {optionalTitle(title)}\n            {optionalSubtitle(subtitle)}\n        </div>\n        {optionalDivider(hasDivider)}\n        <div className={classes.body}>\n            {children}\n        </div>\n    </div>\n);\n\nfunction optionalTitle(title?: string) {\n    return optionalTypography({text: title, variant: \"h3\"});\n}\n\nfunction optionalSubtitle(subtitle?: string) {\n    return optionalTypography({text: subtitle, variant: \"h5\"});\n}\n\nfunction optionalTypography({text, variant}: { text?: string, variant: TypographyTypeMap[\"props\"][\"variant\"] }) {\n    return text\n        ? <Typography variant={variant} paragraph>{text}</Typography>\n        : \"\";\n}\n\nfunction optionalDivider(hasDivider?: boolean) {\n    return hasDivider\n        ? <Divider/>\n        : \"\";\n}\n\nSection.defaultProps = {\n    hasDivider: false\n};\n\nexport default withStyles(styles)(Section);\n","import * as React from \"react\";\nimport {createStyles, Theme, withStyles, WithStyles} from \"@material-ui/core\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nimport informationMetadatas from \"../../metadata/about/information.json\";\nimport AboutEntry from \"../../model/AboutEntry\";\n\nconst styles = (theme: Theme) => createStyles({\n    root: {\n        // width: '100%',\n        marginTop: theme.spacing(3),\n        overflowX: 'auto',\n    },\n    table: {\n        height: \"auto\"\n        // minWidth: 700,\n    },\n    row: {\n        color: theme.palette.secondary.contrastText,\n        height: theme.spacing(4),\n    },\n    divider: {\n        backgroundColor: theme.palette.secondary.light,\n        color: theme.palette.secondary.contrastText\n    }\n});\n\ninterface AboutInformationProps extends WithStyles<typeof styles> {\n}\n\nfunction AboutInformation(props: AboutInformationProps) {\n    const {classes} = props;\n    return (\n        <Paper className={classes.root}>\n            <Table className={classes.table}>\n                <TableHead>\n                    {dividerRow()}\n                </TableHead>\n                <TableBody>\n                    {(informationMetadatas as AboutEntry[][]).map(toTableGroups)}\n                </TableBody>\n            </Table>\n        </Paper>\n    );\n\n    function toTableGroups(group: AboutEntry[], i: number) {\n        return (\n            <React.Fragment key={i}>\n                {group.map(toRow)}\n                {dividerRow()}\n            </React.Fragment>\n        );\n\n        function toRow(entry: AboutEntry, j: number) {\n            return (\n                <TableRow key={`${i}_${j}_${entry.key}`} className={classes.row}>\n                    <TableCell component=\"th\" scope=\"row\" align=\"right\">\n                        <strong>{entry.key}</strong>\n                    </TableCell>\n                    <TableCell align=\"left\">\n                        <span>{entry.value}</span>\n                    </TableCell>\n                </TableRow>\n            );\n        }\n    }\n\n    function dividerRow() {\n        return (\n            <TableRow className={classes.divider}>\n                <TableCell/>\n                <TableCell/>\n            </TableRow>\n        );\n    }\n}\n\nexport default withStyles(styles)(AboutInformation);\n\n","import * as React from \"react\";\r\nimport {createStyles, Theme, withStyles, WithStyles} from \"@material-ui/core\";\r\n\r\nimport Section from \"../common/Section\";\r\nimport AboutInformation from \"./AboutInformation\";\r\n\r\nconst styles = (theme: Theme) => createStyles({});\r\n\r\ninterface AboutPanelProps extends WithStyles<typeof styles> {\r\n}\r\n\r\nfunction AboutPanel(props: AboutPanelProps) {\r\n    return (\r\n        <Section\r\n            id=\"about\"\r\n            hasDivider={false}\r\n            title=\"About\"\r\n            subtitle=\"Some information about myself\"\r\n        >\r\n            <AboutInformation/>\r\n        </Section>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(AboutPanel);","import * as React from \"react\";\r\nimport {createStyles, Theme, withStyles, WithStyles} from \"@material-ui/core\";\r\n\r\nimport Section from \"../common/Section\";\r\nimport {PortfoliosFactory} from \"./PortfoliosFactory\";\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    portfolio: {\r\n        margin: \"5%\"\r\n    }\r\n});\r\n\r\ninterface PortfoliosPanelProps extends WithStyles<typeof styles> {\r\n    portfoliosFactory: PortfoliosFactory\r\n}\r\n\r\ninterface PortfoliosPanelState {\r\n    portfolios: React.ReactNode\r\n}\r\n\r\nclass PortfoliosPanel extends React.Component<PortfoliosPanelProps, PortfoliosPanelState> {\r\n    constructor(props: Readonly<PortfoliosPanelProps>) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            portfolios: []\r\n        };\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        this.props.portfoliosFactory.createPortfolios()\r\n            .then(portfolios => this.setState({portfolios}))\r\n    }\r\n\r\n    render(): React.ReactNode {\r\n        return (\r\n            <Section\r\n                id=\"portfolio\"\r\n                hasDivider={true}\r\n                title=\"Portfolio\"\r\n                subtitle=\"Some of my previous works\"\r\n            >\r\n                <div>\r\n                    {this.state.portfolios}\r\n                </div>\r\n            </Section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(PortfoliosPanel);","import * as React from \"react\";\nimport {createStyles, Theme, withStyles, WithStyles} from \"@material-ui/core\";\nimport ContactMetadata from \"../../model/ContactMetadata\";\n\nconst styles = (theme: Theme) => createStyles({\n    icon: {\n        padding: theme.spacing(2),\n    }\n});\n\ninterface ContactIconProps extends WithStyles<typeof styles> {\n    metadata: ContactMetadata\n}\n\nfunction ContactIcon(props: ContactIconProps) {\n    const {classes, metadata} = props;\n    return (\n        <div className={classes.icon}>\n            <a href={metadata.href} target=\"_blank\" rel=\"noopener\">\n                <img\n                    src={metadata.img.src}\n                    alt={metadata.img.alt}/>\n            </a>\n        </div>\n    );\n}\n\nexport default withStyles(styles)(ContactIcon);\n","import * as React from \"react\";\nimport {createStyles, Theme, withStyles, WithStyles} from \"@material-ui/core\";\nimport Hidden from '@material-ui/core/Hidden';\n\nimport ContactIcon from \"./ContactIcon\";\n\nimport iconMetadatas from \"../../metadata/contact/icons.json\";\nimport badgeMetadatas from \"../../metadata/contact/badges.json\";\nimport badgeMicroMetadatas from \"../../metadata/contact/badges_micro.json\";\nimport ContactMetadata from \"../../model/ContactMetadata\";\nimport Section from \"../common/Section\";\n\nconst styles = (theme: Theme) => createStyles({\n    icons: {\n        padding: theme.spacing(3),\n        display: \"flex\",\n        flexFlow: \"wrap\",\n        justifyContent: \"center\",\n        alignItems: \"baseline\"\n    },\n    badges: {}\n});\n\ninterface ContactPanelProps extends WithStyles<typeof styles> {\n}\n\nfunction ContactPanel(props: ContactPanelProps) {\n    const {classes} = props;\n    return (\n        <Section\n            id=\"contact\"\n            hasDivider={true}\n            title=\"Contact\"\n            subtitle=\"Check me out at the following!\"\n        >\n            <div className={classes.icons}>\n                {contactIcons(iconMetadatas)}\n            </div>\n            <div className={classes.badges}>\n                <Badges/>\n            </div>\n        </Section>\n    );\n}\n\nfunction Badges() {\n    return (\n        <React.Fragment>\n            <Hidden smUp>\n                {contactIcons(badgeMicroMetadatas)}\n            </Hidden>\n            <Hidden xsDown>\n                {contactIcons(badgeMetadatas)}\n            </Hidden>\n        </React.Fragment>\n    );\n}\n\nfunction contactIcons(metadatas: ContactMetadata[]) {\n    return metadatas.map((metadata, i) => (\n        <ContactIcon key={`${i.toString()}_${metadata.img.alt}`} metadata={metadata}/>\n    ));\n}\n\nexport default withStyles(styles)(ContactPanel);\n","enum ImageType {\n    screenshot = \"screenshot\"\n}\n\nenum LinkType {\n    pen = \"code\", full = \"full\", details = \"details\"\n}\n\nexport interface Content {\n    img: { [type in ImageType]?: Partial<HTMLImageElement> },\n    links: { [type in LinkType]?: string },\n    technologies: string[],\n    credentials: {\n        user: string,\n        hash: string\n    }\n}\n\nexport default interface CodePenItemContentExtractor<ContentType extends keyof Content> {\n    key: string,\n    extract: ($: any) => Content[ContentType], // TODO: fix the typing\n}\n\nconst imgExtractor: CodePenItemContentExtractor<\"img\"> = {\n    key: \"img\",\n    extract: $ => ({[ImageType.screenshot]: $(\"img\")[0].attribs})\n};\n\nconst linksExtractor: CodePenItemContentExtractor<\"links\"> = {\n    key: \"links\",\n    extract: $ => {\n        const elements = $(\"a\");\n        const distinctLinks: string[] = Array.from(new Set(Array.from(elements).map((element: any) => element.attribs.href)));\n        return Object.keys(LinkType).reduce(toLinksObject, {});\n\n        function toLinksObject(obj, part: string) {\n            const matchedElement = distinctLinks.find(pathWith(part));\n            if (matchedElement) {\n                const linkType = LinkType[part];\n                obj[linkType] = matchedElement;\n            }\n            return obj;\n        }\n\n        function pathWith(part: string): (path: string) => boolean {\n            return path => path.indexOf(`/${part}/`) !== -1;\n        }\n    }\n};\n\nconst REGEX_PATTERN = /This Pen uses: (.+)/;\n\nconst technologiesExtractor: CodePenItemContentExtractor<\"technologies\"> = {\n    key: \"technologies\",\n    extract: $ => {\n        const elements = $(\"small\");\n        const sentence = elements[0].children[0].data;\n        if (sentence) {\n            const matchResult = REGEX_PATTERN.exec(sentence);\n            if (matchResult && matchResult[1]) {\n                return matchResult[1].split(\",\")\n                    .map(s => s.trim())\n                    .filter(s => \"and\" !== s);\n            }\n        }\n        // TODO: add test\n        console.debug(`Unable to extract technologies from '${sentence}'`);\n        return [];\n    }\n};\n\nconst credentialsExtractor: CodePenItemContentExtractor<\"credentials\"> = {\n    key: \"credentials\",\n    extract: $ => {\n        const elements = $(\"a\");\n        const firstLink = elements[0];\n        const penUrl = new URL(firstLink.attribs.href);\n        const pathname = penUrl.pathname;\n        const parts = pathname.split(\"/\");\n\n        return {\n            user: parts[1],\n            hash: parts[3],\n        };\n    }\n};\n\nexport {imgExtractor, linksExtractor, technologiesExtractor, credentialsExtractor};\n","import cheerio from \"cheerio\";\nimport CodePenItemContentExtractor, {Content} from \"./CodePenItemContentExtractor\";\n\nexport default class CodePenItemContentParser {\n    private readonly $: cheerio.Root;\n\n    private constructor($: cheerio.Root) {\n        this.$ = $;\n    }\n\n    public static newParser(rawContent: string): CodePenItemContentParser {\n        const $ = cheerio.load(rawContent);\n        return new CodePenItemContentParser($);\n    }\n\n    parseContent<T extends keyof Content>(extractor: CodePenItemContentExtractor<T>): Content[T] {\n        return extractor.extract(this.$);\n    }\n}\n","import * as React from \"react\";\nimport { createStyles, Theme, withStyles, WithStyles } from \"@material-ui/core\";\nimport { Breakpoint } from \"@material-ui/core/styles/createBreakpoints\";\nimport CodePen from \"ts-react-codepen-embed\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport withWidth from \"@material-ui/core/withWidth\";\n\nimport { PortfolioProps } from \"./PortfolioProps\";\nimport CodePenItemContentParser from \"../../services/portfolio/CodePenItemContentParser\";\nimport { credentialsExtractor } from \"../../services/portfolio/CodePenItemContentExtractor\";\n\nconst styles = (theme: Theme) => createStyles({\n    embeddedContainer: {\n        margin: \"5%\"\n    }\n});\n\ninterface EmbeddedPenPortfolioProps extends PortfolioProps, WithStyles<typeof styles> {\n    isScriptLoaded?: boolean\n}\n\nconst MAPPING_HEIGHTS: { [b in Breakpoint]: number } = {\n    xs: 288,\n    sm: 384,\n    md: 384,\n    lg: 640,\n    xl: 768,\n};\n\nfunction EmbeddedPenPortfolio(props: EmbeddedPenPortfolioProps) {\n    const { title, content, isScriptLoaded, classes } = props;\n    const contentParser = CodePenItemContentParser.newParser(content);\n    const { user, hash } = contentParser.parseContent(credentialsExtractor);\n\n    return (\n        <div className={classes.embeddedContainer}>\n            <CodePen\n                user={user}\n                hash={hash}\n                title={title}\n                height={getHeight()}\n                loader={() => <CircularProgress/>}\n                shouldLoadScript={false}\n                overrideAsLoaded={isScriptLoaded}\n            />\n        </div>\n    );\n\n    function getHeight() {\n        const width: Breakpoint = (props as any).width;\n        return MAPPING_HEIGHTS[width];\n    }\n}\n\nexport default withWidth()(withStyles(styles)(EmbeddedPenPortfolio));\n","import * as React from \"react\";\r\nimport {createStyles, Theme, WithStyles, withStyles} from \"@material-ui/core\";\r\nimport {Items} from \"rss-parser\";\r\nimport {CodepenEmbedScriptTagBuilder, ScriptTagBuilder} from \"ts-react-codepen-embed\";\r\n\r\nimport RssFeedsParser from \"../../services/portfolio/RssFeedsParser\";\r\nimport EmbeddedPenPortfolio from \"./EmbeddedPenPortfolio\";\r\n\r\nconst styles = (theme: Theme) => createStyles({});\r\n\r\ninterface Props extends WithStyles<typeof styles> {\r\n    parser: RssFeedsParser;\r\n    rssFeedUrl: string;\r\n}\r\n\r\ninterface State {\r\n    items: Items[],\r\n    loaded: boolean,\r\n    error?: string,\r\n}\r\n\r\nclass EmbeddedPenPortfolios extends React.Component<Props, State> {\r\n    private scriptTagBuilder: ScriptTagBuilder;\r\n\r\n    constructor(props: Readonly<Props>) {\r\n        super(props);\r\n        this.state = {loaded: false, items: []};\r\n\r\n        this.scriptTagBuilder = new CodepenEmbedScriptTagBuilder()\r\n            .setAsync(true)\r\n            .withOnLoadHandler(() => this.setState({loaded: true,}))\r\n            .withOnErrorHandler(() => this.setState({error: 'Failed to load the pen'}));\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        this.props.parser.parseUrl(this.props.rssFeedUrl)\r\n            .then(items => this.setState({items}))\r\n            .then(() => this.scriptTagBuilder.appendTo(document.body))\r\n            .catch(error => console.log(error));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.items.map(({content = \"\", link = \"\", title = \"\"}: Items, index: number) =>\r\n                    (<EmbeddedPenPortfolio\r\n                        key={`${index}_${title}`}\r\n                        content={content}\r\n                        link={link}\r\n                        title={title}\r\n                        isScriptLoaded={this.state.loaded}\r\n                    />)\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(EmbeddedPenPortfolios);","import React from 'react';\r\nimport RssParser from \"rss-parser\";\r\n\r\nimport SectionMetadata from \"../model/SectionMetadata\";\r\n// import HomePanel from \"../components/home/HomePanel\";\r\nimport AboutPanel from \"../components/about/AboutPanel\";\r\nimport PortfoliosPanel from \"../components/portfolio/PortfoliosPanel\";\r\nimport ContactPanel from \"../components/contact/ContactPanel\";\r\nimport EmbeddedPenPortfoliosFactory from \"../components/portfolio/EmbeddedPenPortfoliosFactory\";\r\nimport LocalCodePenRssFeedsParser from \"../services/portfolio/LocalCodePenRssFeedsParser\";\r\n\r\nconst CORS_PROXY = \"https://cors-anywhere.herokuapp.com\";\r\nconst rssFeedUrl = `${CORS_PROXY}/https://codepen.io/collection/neBvQa/feed`;\r\nconst factory = new EmbeddedPenPortfoliosFactory(new LocalCodePenRssFeedsParser(new RssParser()), rssFeedUrl);\r\n\r\nconst sectionConfigs: SectionMetadata[] = [\r\n    // {\r\n    //     name: 'Home',\r\n    //     component: <HomePanel/>\r\n    // },\r\n    {\r\n        name: 'About',\r\n        component: <AboutPanel/>\r\n    },\r\n    {\r\n        name: 'Portfolio',\r\n        component: <PortfoliosPanel portfoliosFactory={factory}/>\r\n    },\r\n    {\r\n        name: 'Contact',\r\n        component: <ContactPanel/>\r\n    },\r\n];\r\n\r\nexport default sectionConfigs;","import * as React from \"react\";\r\nimport {CodepenEmbedScriptTagBuilder, ScriptTagBuilder} from \"ts-react-codepen-embed\";\r\n\r\nimport RssFeedsParser from \"../../services/portfolio/RssFeedsParser\";\r\nimport {PortfoliosFactory} from \"./PortfoliosFactory\";\r\nimport EmbeddedPenPortfolios from \"./EmbeddedPenPortfolios\";\r\n\r\nexport default class EmbeddedPenPortfoliosFactory implements PortfoliosFactory {\r\n    private readonly parser: RssFeedsParser;\r\n    private readonly rssFeedUrl: string;\r\n\r\n    constructor(parser: RssFeedsParser, rssFeedUrl: string) {\r\n        this.parser = parser;\r\n        this.rssFeedUrl = rssFeedUrl;\r\n    }\r\n\r\n    createPortfolios() {\r\n        return Promise.resolve(<EmbeddedPenPortfolios parser={this.parser} rssFeedUrl={this.rssFeedUrl}/>);\r\n    }\r\n}","import RssFeedsParser from \"./RssFeedsParser\";\r\nimport {RssParser} from \"./RssParser\";\r\nimport {rssFeedsContent} from \"../../metadata/portfolios/rssFeeds.json\";\r\n\r\nexport default class LocalCodePenRssFeedsParser implements RssFeedsParser {\r\n    private readonly rssParser: RssParser;\r\n    private rssFeeds: string;\r\n\r\n    constructor(rssParser: RssParser, rssFeeds: string = rssFeedsContent) {\r\n        this.rssParser = rssParser;\r\n        this.rssFeeds = rssFeeds;\r\n    }\r\n\r\n    async parseUrl() {\r\n        let output;\r\n\r\n        try {\r\n            output = await this.rssParser.parseString(this.rssFeeds);\r\n        } catch (e) {\r\n            throw new Error(`Unable to read or parse rssFeedsString due to: '${e}'`);\r\n        }\r\n\r\n        if (output && output.items) {\r\n            return output.items;\r\n        } else {\r\n            throw new Error(`Missing 'items' from the parsed output: '${this.rssFeeds}'`);\r\n        }\r\n    }\r\n}\r\n","import {createMuiTheme} from '@material-ui/core/styles';\nimport {indigo} from \"@material-ui/core/colors\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: indigo,\n        secondary: {main: '#e6f0fe',},\n    },\n    typography: {\n    },\n    overrides: {\n        MuiTableRow: {\n            root: { //for the body\n                height: \"100%\"\n            },\n            head: { //for the head\n                height: \"100%\"\n            }\n        }\n    }\n});\n\nexport {theme};\n","import ReactGA from 'react-ga';\n\nexport default class GoogleAnalyticsManager {\n    private _isInitialized: boolean = false;\n\n    public init() {\n        const isGoogleAnalyticsTrackingEnabled = isTrue(process.env.REACT_APP_GOOGLE_ANALYTICS_TRACKING_ENABLED);\n        const trackingId = process.env.REACT_APP_GOOGLE_ANALYTICS_TRACKING_ID;\n        const testMode = isTrue(process.env.REACT_APP_REACT_GA_TEST_MODE);\n\n        if (isGoogleAnalyticsTrackingEnabled && trackingId) {\n            console.log(\"Google Analytics tracking is enabled and trackingId is defined, initializing Google Analytics module now\");\n            ReactGA.initialize(trackingId, { testMode });\n            this._isInitialized = true;\n        } else {\n            if (!isGoogleAnalyticsTrackingEnabled) {\n                console.log(\"Google Analytics tracking is disabled and trackingId is defined, thus not initializing\");\n            } else {\n                console.log(\"Google Analytics trackingId is not defined, thus not initializing\");\n            }\n        }\n    }\n\n    public pageview(path: string) {\n        if (this.isInitialized()) {\n            console.log(`pageview at path: ${path}`);\n            ReactGA.pageview(path);\n        } else {\n            console.warn(`Not initialized - not going to set pageview for path: \"${path}\"`);\n        }\n    }\n\n    public isInitialized(): boolean {\n        return this._isInitialized;\n    }\n}\n\nfunction isTrue(optionalString?: string): boolean {\n    return (typeof optionalString !== \"undefined\") && (\"true\" === optionalString.toLowerCase());\n}\n","import React, {Component} from 'react';\r\nimport {MuiThemeProvider} from '@material-ui/core/styles';\r\n\r\nimport PortfolioPage from \"./page/PortfolioPage\";\r\nimport sectionConfigs from \"../metadata/sectionConfigs\";\r\nimport {theme} from \"../services/MuiThemeFactory\";\r\n\r\nimport '../css/App.css';\r\nimport GoogleAnalyticsManager from \"../services/GoogleAnalyticsManager\";\r\n\r\ninterface Props {\r\n}\r\n\r\nclass App extends Component<Props> {\r\n    private readonly gAManager: GoogleAnalyticsManager = new GoogleAnalyticsManager();\r\n\r\n    constructor(props: Readonly<Props>);\r\n    constructor(props: Props, context?: any);\r\n    constructor(props: Props | Readonly<Props>, context?: any) {\r\n        super(props, context);\r\n        this.gAManager.init();\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        const path = window.location.pathname + window.location.search;\r\n        this.gAManager.pageview(path);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <MuiThemeProvider theme={theme}>\r\n                <div className=\"App\">\r\n                    <PortfolioPage sectionConfigs={sectionConfigs}/>\r\n                </div>\r\n            </MuiThemeProvider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import \"./utils/polyfills\";\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}