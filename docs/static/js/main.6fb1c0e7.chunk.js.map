{"version":3,"sources":["components/page/OldVersionLinkButton.tsx","components/page/PageAppBar.tsx","components/page/DrawerItemsWithScrollspy.tsx","components/page/PageDrawer.tsx","components/page/PageMain.tsx","components/page/PortfolioPage.tsx","services/portfolio/CodePenRssFeedsParser.ts","components/common/Section.tsx","components/home/HomePanel.tsx","components/about/AboutInformation.tsx","components/about/AboutPanel.tsx","services/portfolio/CodePenItemContentExtractor.ts","services/portfolio/CodePenItemContentParser.ts","components/portfolio/EmbeddedPenPortfolio.tsx","components/portfolio/Portfolio.tsx","components/portfolio/PortfoliosPanel.tsx","components/contact/ContactIcon.tsx","components/contact/ContactPanel.tsx","metadata/sectionConfigs.tsx","services/MuiThemeFactory.ts","components/App.tsx","serviceWorker.js","index.tsx"],"names":["OLD_VERSION_URL","withStyles","theme","createStyles","props","react_default","a","createElement","Hidden_default","xsDown","Button_default","href","variant","color","appBar","zIndex","drawer","title","flexGrow","textAlign","classes","AppBar_default","position","className","Toolbar_default","Typography_default","noWrap","classNames","page_OldVersionLinkButton","root","display","width","flexShrink","drawerPaper","content","padding","spacing","unit","toolbar","mixins","scrollSpyList","margin","scrollSpyListItem","items","Fragment","Scrollspy_default","currentClassName","map","text","index","key","item","concat","replace","toLowerCase","ListItem_default","button","ListItemIcon_default","MoveToInbox_default","Mail_default","ListItemText_default","primary","asItems","sectionConfigs","config","name","Drawer_default","paper","page_DrawerItemsWithScrollspy","component","Divider_default","CssBaseline_default","page_PageAppBar","smDown","page_PageDrawer","page_PageMain","CodePenRssFeedsParser","rssParser","Object","classCallCheck","this","url","parseURL","then","output","Error","catch","e","Section","_ref","id","subtitle","hasDivider","children","react","section","header","optionalTypography","optionalTitle","optionalSubtitle","optionalDivider","body","_ref2","paragraph","defaultProps","common_Section","marginTop","overflowX","table","height","row","palette","secondary","contrastText","divider","backgroundColor","light","Paper_default","Table_default","TableHead_default","dividerRow","TableBody_default","informationMetadatas","group","i","entry","j","TableRow_default","TableCell_default","scope","align","value","ImageType","LinkType","about_AboutInformation","CodePenItemContentParser","$","extractor","extract","rawContent","cheerio","load","credentialsExtractor","firstLink","parts","URL","attribs","pathname","split","user","hash","embeddedContainer","_contentParser$parseC","newParser","parseContent","lib_default","loader","CircularProgress_default","portfolio_EmbeddedPenPortfolio","PortfoliosPanel","_this","possibleConstructorReturn","getPrototypeOf","call","state","_this2","parser","parseUrl","rssFeedUrl","setState","_this3","_ref$content","_ref$link","link","_ref$title","portfolio","portfolio_Portfolio","React","icon","metadata","target","src","img","alt","contactIcons","metadatas","contact_ContactIcon","toString","icons","flexFlow","justifyContent","alignItems","badges","iconMetadatas","badgeMetadatas","RssParser","home_HomePanel","about_AboutPanel","portfolio_PortfoliosPanel","contact_ContactPanel","createMuiTheme","indigo","main","typography","useNextVariants","overrides","MuiTableRow","head","App","core_styles","page_PortfolioPage","Component","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6fb1c0e7.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Theme, withStyles} from '@material-ui/core/styles';\r\nimport {createStyles, WithStyles} from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n});\r\n\r\ninterface OldVersionLinkButtonProps extends WithStyles<typeof styles> {\r\n}\r\n\r\nconst OLD_VERSION_URL = \"https://codepen.io/htbkoo/full/ZyYWNN/\";\r\n\r\nfunction OldVersionLinkButton(props: OldVersionLinkButtonProps) {\r\n    return (\r\n        <Hidden xsDown>\r\n            <Button href={OLD_VERSION_URL} variant=\"contained\" color=\"inherit\">\r\n                Switch to old version\r\n            </Button>\r\n        </Hidden>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(OldVersionLinkButton);","import React from 'react';\r\nimport {Theme, withStyles} from '@material-ui/core/styles';\r\nimport {createStyles, WithStyles} from '@material-ui/core';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport classNames from \"classnames\";\r\nimport OldVersionLinkButton from \"./OldVersionLinkButton\";\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n        textAlign: \"left\",\r\n    },\r\n});\r\n\r\ninterface PageAppBarProps extends WithStyles<typeof styles> {\r\n}\r\n\r\nfunction PageAppBar(props: PageAppBarProps) {\r\n    const {classes} = props;\r\n\r\n    return (\r\n        <AppBar position=\"fixed\" className={classes.appBar}>\r\n            <Toolbar>\r\n                <Typography variant=\"h6\" color=\"inherit\" noWrap className={classNames(classes.title)}>\r\n                    Hey's Personal Portfolio\r\n                </Typography>\r\n                <OldVersionLinkButton/>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(PageAppBar);","import React from 'react';\r\nimport {Theme, withStyles} from '@material-ui/core/styles';\r\nimport {createStyles, WithStyles} from '@material-ui/core';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport Scrollspy from 'react-scrollspy';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing.unit * 3,\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    scrollSpyList: {\r\n        margin: 0,\r\n        padding: 0\r\n    },\r\n    scrollSpyListItem: {\r\n        display: 'flex',\r\n    }\r\n});\r\n\r\ninterface DrawerItemsWithScrollspyProps extends WithStyles<typeof styles> {\r\n    items: string[],\r\n}\r\n\r\nfunction DrawerItemsWithScrollspy(props: DrawerItemsWithScrollspyProps) {\r\n    const {items, classes} = props;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Scrollspy\r\n                items={items}\r\n                currentClassName=\"is-current\"\r\n                className={classes.scrollSpyList}\r\n            >\r\n                {items.map((text, index) => (\r\n                    <a key={text} href={itemToHref(text)} className={classes.scrollSpyListItem}>\r\n                        <ListItem button>\r\n                            <ListItemIcon>{index % 2 === 0 ? <InboxIcon/> : <MailIcon/>}</ListItemIcon>\r\n                            <ListItemText primary={text}/>\r\n                        </ListItem>\r\n                    </a>\r\n                ))}\r\n            </Scrollspy>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nfunction itemToHref(item: string): string {\r\n    return `#${item.replace(/ /g, \"-\").toLowerCase()}`;\r\n}\r\n\r\nexport default withStyles(styles)(DrawerItemsWithScrollspy);","import React from 'react';\r\nimport {Theme, withStyles} from '@material-ui/core/styles';\r\nimport {createStyles, WithStyles} from '@material-ui/core';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport DrawerItemsWithScrollspy from \"./DrawerItemsWithScrollspy\";\r\nimport SectionMetadata from \"../../model/SectionMetadata\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n});\r\n\r\ninterface PageDrawerProps extends WithStyles<typeof styles> {\r\n    sectionConfigs: SectionMetadata[]\r\n}\r\n\r\nfunction PageDrawer(props: PageDrawerProps) {\r\n    const {classes, sectionConfigs} = props;\r\n\r\n    return (\r\n        <Drawer\r\n            className={classes.drawer}\r\n            variant=\"permanent\"\r\n            classes={{\r\n                paper: classes.drawerPaper,\r\n            }}\r\n        >\r\n            <div className={classes.toolbar}/>\r\n\r\n            <DrawerItemsWithScrollspy items={asItems(sectionConfigs)}/>\r\n\r\n        </Drawer>\r\n    );\r\n}\r\n\r\nfunction asItems(sectionConfigs: SectionMetadata[]): string[] {\r\n    return sectionConfigs.map(config => config.name);\r\n}\r\n\r\nexport default withStyles(styles)(PageDrawer);","import React from 'react';\r\nimport {Theme, withStyles} from '@material-ui/core/styles';\r\nimport {createStyles, WithStyles} from '@material-ui/core';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport SectionMetadata from \"../../model/SectionMetadata\";\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing.unit * 3,\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n});\r\n\r\ninterface PageMainProps extends WithStyles<typeof styles> {\r\n    sectionConfigs: SectionMetadata[]\r\n}\r\n\r\nfunction PageMain(props: PageMainProps) {\r\n    const {classes, sectionConfigs} = props;\r\n\r\n    return (\r\n        <main className={classes.content}>\r\n            <div className={classes.toolbar}/>\r\n\r\n            {sectionConfigs.map(config => (\r\n                <div key={config.name}>\r\n                    {config.component}\r\n                    <Divider/>\r\n                </div>\r\n            ))}\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(PageMain);","import React from 'react';\r\nimport {Theme, withStyles} from '@material-ui/core/styles';\r\nimport {createStyles, WithStyles} from '@material-ui/core';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport PageAppBar from \"./PageAppBar\";\r\nimport PageDrawer from \"./PageDrawer\";\r\nimport PageMain from \"./PageMain\";\r\nimport SectionMetadata from \"../../model/SectionMetadata\";\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n});\r\n\r\ninterface PortfolioPageProps extends WithStyles<typeof styles> {\r\n    sectionConfigs: SectionMetadata[]\r\n}\r\n\r\nfunction PortfolioPage(props: PortfolioPageProps) {\r\n    const {classes, sectionConfigs} = props;\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline/>\r\n            <div>\r\n                <PageAppBar/>\r\n            </div>\r\n            <Hidden smDown>\r\n                <div>\r\n                    <PageDrawer sectionConfigs={sectionConfigs}/>\r\n                </div>\r\n            </Hidden>\r\n            <div>\r\n                <PageMain sectionConfigs={sectionConfigs}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(PortfolioPage);","import {Output} from \"rss-parser\";\r\n\r\ninterface RssParser {\r\n    // parseString(xml: string, callback?: (err: Error, feed: Output) => void): Promise<Output>;\r\n    parseURL(feedUrl: string, callback?: (err: Error, feed: Output) => void, redirectCount?: number): Promise<Output>;\r\n}\r\n\r\nexport default class CodePenRssFeedsParser {\r\n    private readonly rssParser: RssParser;\r\n\r\n    constructor(rssParser: RssParser) {\r\n        this.rssParser = rssParser;\r\n    }\r\n\r\n    async parseUrl(url: string) {\r\n        return this.rssParser.parseURL(url)\r\n            .then(output => {\r\n                if (output && output.items) {\r\n                    return output.items;\r\n                } else {\r\n                    throw new Error(\"Missing 'items' from the parsed output\");\r\n                }\r\n            })\r\n            .catch(e => {\r\n                throw new Error(`Unable to parse from url: '${url}' due to ${e}`);\r\n            });\r\n    }\r\n}","import * as React from \"react\";\r\nimport {FunctionComponent} from \"react\";\r\nimport {createStyles, Theme, withStyles, WithStyles} from \"@material-ui/core\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport {ThemeStyle} from \"@material-ui/core/styles/createTypography\";\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    section: {\r\n        padding: theme.spacing.unit * 3\r\n    },\r\n    header: {},\r\n    body: {},\r\n});\r\n\r\ninterface SectionProps extends WithStyles<typeof styles> {\r\n    id: string,\r\n    title?: string,\r\n    subtitle?: string,\r\n    hasDivider?: boolean,\r\n}\r\n\r\nconst Section: FunctionComponent<SectionProps> = ({id, title, subtitle, hasDivider, children, classes}) => (\r\n    <div id={id} className={classes.section}>\r\n        <div className={classes.header}>\r\n            {optionalTitle(title)}\r\n            {optionalSubtitle(subtitle)}\r\n        </div>\r\n        {optionalDivider(hasDivider)}\r\n        <div className={classes.body}>\r\n            {children}\r\n        </div>\r\n    </div>\r\n);\r\n\r\nfunction optionalTitle(title?: string) {\r\n    return optionalTypography({text: title, variant: \"h3\"});\r\n}\r\n\r\nfunction optionalSubtitle(subtitle?: string) {\r\n    return optionalTypography({text: subtitle, variant: \"h5\"});\r\n}\r\n\r\ntype Variant = ThemeStyle | 'srOnly' | 'inherit';\r\n\r\nfunction optionalTypography({text, variant}: { text?: string, variant: Variant }) {\r\n    return text\r\n        ? <Typography variant={variant} paragraph>{text}</Typography>\r\n        : \"\";\r\n}\r\n\r\nfunction optionalDivider(hasDivider?: boolean) {\r\n    return hasDivider\r\n        ? <Divider/>\r\n        : \"\";\r\n}\r\n\r\nSection.defaultProps = {\r\n    hasDivider: false\r\n};\r\n\r\nexport default withStyles(styles)(Section);","import * as React from \"react\";\r\nimport {createStyles, Theme, withStyles, WithStyles} from \"@material-ui/core\";\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport Section from \"../common/Section\";\r\n\r\nconst styles = (theme: Theme) => createStyles({});\r\n\r\ninterface HomePanelProps extends WithStyles<typeof styles> {\r\n}\r\n\r\nfunction HomePanel(props: HomePanelProps) {\r\n    return (\r\n        <Section\r\n            id=\"home\"\r\n            hasDivider={false}\r\n            title=\"Welcome To My Portfolio\"\r\n        >\r\n            <Typography paragraph >\r\n\r\n            </Typography>\r\n        </Section>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(HomePanel);","import * as React from \"react\";\r\nimport {createStyles, Theme, withStyles, WithStyles} from \"@material-ui/core\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport informationMetadatas from \"../../metadata/about/information.json\";\r\nimport AboutEntry from \"../../model/AboutEntry\";\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    root: {\r\n        // width: '100%',\r\n        marginTop: theme.spacing.unit * 3,\r\n        overflowX: 'auto',\r\n    },\r\n    table: {\r\n        height: \"auto\"\r\n        // minWidth: 700,\r\n    },\r\n    row: {\r\n        color: theme.palette.secondary.contrastText,\r\n        height: theme.spacing.unit * 4,\r\n    },\r\n    divider: {\r\n        backgroundColor: theme.palette.secondary.light,\r\n        color: theme.palette.secondary.contrastText\r\n    }\r\n});\r\n\r\ninterface AboutInformationProps extends WithStyles<typeof styles> {\r\n}\r\n\r\nfunction AboutInformation(props: AboutInformationProps) {\r\n    const {classes} = props;\r\n    return (\r\n        <Paper className={classes.root}>\r\n            <Table className={classes.table}>\r\n                <TableHead>\r\n                    {dividerRow()}\r\n                </TableHead>\r\n                <TableBody>\r\n                    {(informationMetadatas as AboutEntry[][]).map(toTableGroups)}\r\n                </TableBody>\r\n            </Table>\r\n        </Paper>\r\n    );\r\n\r\n    function toTableGroups(group: AboutEntry[], i: number) {\r\n        return (\r\n            <React.Fragment key={i}>\r\n                {group.map(toRow)}\r\n                {dividerRow()}\r\n            </React.Fragment>\r\n        );\r\n\r\n        function toRow(entry: AboutEntry, j: number) {\r\n            return (\r\n                <TableRow key={`${i}_${j}_${entry.key}`} className={classes.row}>\r\n                    <TableCell component=\"th\" scope=\"row\" align=\"right\">\r\n                        <strong>{entry.key}</strong>\r\n                    </TableCell>\r\n                    <TableCell align=\"left\">\r\n                        <span>{entry.value}</span>\r\n                    </TableCell>\r\n                </TableRow>\r\n            );\r\n        }\r\n    }\r\n\r\n    function dividerRow() {\r\n        return (\r\n            <TableRow className={classes.divider}>\r\n                <TableCell/>\r\n                <TableCell/>\r\n            </TableRow>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(AboutInformation);\r\n\r\n","import * as React from \"react\";\r\nimport {createStyles, Theme, withStyles, WithStyles} from \"@material-ui/core\";\r\n\r\nimport Section from \"../common/Section\";\r\nimport AboutInformation from \"./AboutInformation\";\r\n\r\nconst styles = (theme: Theme) => createStyles({});\r\n\r\ninterface AboutPanelProps extends WithStyles<typeof styles> {\r\n}\r\n\r\nfunction AboutPanel(props: AboutPanelProps) {\r\n    return (\r\n        <Section\r\n            id=\"about\"\r\n            hasDivider={false}\r\n            title=\"About\"\r\n            subtitle=\"Some information about myself\"\r\n        >\r\n            <AboutInformation/>\r\n        </Section>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(AboutPanel);","enum ImageType {\r\n    screenshot = \"screenshot\"\r\n}\r\n\r\nenum LinkType {\r\n    pen = \"code\", full = \"full\", details = \"details\"\r\n}\r\n\r\nexport interface Content {\r\n    img: { [type in ImageType]?: Partial<HTMLImageElement> },\r\n    links: { [type in LinkType]?: string },\r\n    technologies: string[],\r\n    credentials: {\r\n        user: string,\r\n        hash: string\r\n    }\r\n}\r\n\r\nexport default interface CodePenItemContentExtractor<ContentType extends keyof Content> {\r\n    key: string,\r\n    extract: ($: CheerioStatic) => Content[ContentType]\r\n}\r\n\r\nconst imgExtractor: CodePenItemContentExtractor<\"img\"> = {\r\n    key: \"img\",\r\n    extract: $ => ({[ImageType.screenshot]: $(\"img\")[0].attribs})\r\n};\r\n\r\nconst linksExtractor: CodePenItemContentExtractor<\"links\"> = {\r\n    key: \"links\",\r\n    extract: $ => {\r\n        const elements = $(\"a\");\r\n        const distinctLinks: string[] = Array.from(new Set(Array.from(elements).map((element: any) => element.attribs.href)));\r\n        return Object.keys(LinkType).reduce(toLinksObject, {});\r\n\r\n        function toLinksObject(obj, part: string) {\r\n            const matchedElement = distinctLinks.find(pathWith(part));\r\n            if (matchedElement) {\r\n                const linkType = LinkType[part];\r\n                obj[linkType] = matchedElement;\r\n            }\r\n            return obj;\r\n        }\r\n\r\n        function pathWith(part: string): (path: string) => boolean {\r\n            return path => path.indexOf(`/${part}/`) !== -1;\r\n        }\r\n    }\r\n};\r\n\r\nconst REGEX_PATTERN = /This Pen uses: (.+)/;\r\n\r\nconst technologiesExtractor: CodePenItemContentExtractor<\"technologies\"> = {\r\n    key: \"technologies\",\r\n    extract: $ => {\r\n        const elements = $(\"small\");\r\n        const sentence = elements[0].children[0].data;\r\n        if (sentence) {\r\n            const matchResult = REGEX_PATTERN.exec(sentence);\r\n            if (matchResult && matchResult[1]) {\r\n                return matchResult[1].split(\",\")\r\n                    .map(s => s.trim())\r\n                    .filter(s => \"and\" !== s);\r\n            }\r\n        }\r\n        // TODO: add test\r\n        console.debug(`Unable to extract technologies from '${sentence}'`);\r\n        return [];\r\n    }\r\n};\r\n\r\nconst credentialsExtractor: CodePenItemContentExtractor<\"credentials\"> = {\r\n    key: \"credentials\",\r\n    extract: $ => {\r\n        const elements = $(\"a\");\r\n        const firstLink = elements[0];\r\n        const penUrl = new URL(firstLink.attribs.href);\r\n        const pathname = penUrl.pathname;\r\n        const parts = pathname.split(\"/\");\r\n\r\n        return {\r\n            user: parts[1],\r\n            hash: parts[3],\r\n        };\r\n    }\r\n};\r\n\r\nexport {imgExtractor, linksExtractor, technologiesExtractor, credentialsExtractor};","import cheerio from \"cheerio\";\r\nimport CodePenItemContentExtractor, {Content} from \"./CodePenItemContentExtractor\";\r\n\r\nexport default class CodePenItemContentParser {\r\n    private readonly $: CheerioStatic;\r\n\r\n    private constructor($: CheerioStatic) {\r\n        this.$ = $;\r\n    }\r\n\r\n    public static newParser(rawContent: string): CodePenItemContentParser {\r\n        const $ = cheerio.load(rawContent);\r\n        return new CodePenItemContentParser($);\r\n    }\r\n\r\n    parseContent<T extends keyof Content>(extractor: CodePenItemContentExtractor<T>): Content[T] {\r\n        return extractor.extract(this.$);\r\n    }\r\n}\r\n","import * as React from \"react\";\r\nimport {createStyles, Theme, withStyles, WithStyles} from \"@material-ui/core\";\r\nimport CodePen from \"react-codepen-embed\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nimport {PortfolioProps} from \"./PortfolioProps\";\r\nimport CodePenItemContentParser from \"../../services/portfolio/CodePenItemContentParser\";\r\nimport {credentialsExtractor} from \"../../services/portfolio/CodePenItemContentExtractor\";\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    embeddedContainer: {}\r\n});\r\n\r\ninterface EmbeddedPenPortfolioProps extends PortfolioProps, WithStyles<typeof styles> {\r\n}\r\n\r\nfunction EmbeddedPenPortfolio(props: EmbeddedPenPortfolioProps) {\r\n    const {title, content, classes} = props;\r\n    const contentParser = CodePenItemContentParser.newParser(content);\r\n    const {user, hash} = contentParser.parseContent(credentialsExtractor);\r\n\r\n    return (\r\n        <div className={classes.embeddedContainer}>\r\n            <CodePen\r\n                user={user}\r\n                hash={hash}\r\n                title={title}\r\n                height={512}\r\n                loader={() => <CircularProgress/>}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(EmbeddedPenPortfolio);","import * as React from \"react\";\r\nimport {createStyles, Theme, withStyles, WithStyles} from \"@material-ui/core\";\r\nimport {PortfolioProps} from \"./PortfolioProps\";\r\nimport EmbeddedPenPortfolio from \"./EmbeddedPenPortfolio\";\r\n\r\nconst styles = (theme: Theme) => createStyles({});\r\n\r\ninterface PortfolioPropsWithStyles extends PortfolioProps, WithStyles<typeof styles> {\r\n}\r\n\r\nfunction Portfolio(props: PortfolioPropsWithStyles) {\r\n    return (\r\n        <EmbeddedPenPortfolio {...props}/>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(Portfolio);","import * as React from \"react\";\r\nimport {createStyles, Theme, withStyles, WithStyles} from \"@material-ui/core\";\r\n\r\nimport {Items} from \"rss-parser\";\r\n\r\nimport CodePenRssFeedsParser from \"../../services/portfolio/CodePenRssFeedsParser\";\r\nimport Portfolio from \"./Portfolio\";\r\nimport Section from \"../common/Section\";\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    portfolio: {\r\n        margin: \"5%\"\r\n    }\r\n});\r\n\r\ninterface PortfoliosPanelProps extends WithStyles<typeof styles> {\r\n    rssFeedUrl: string,\r\n    parser: CodePenRssFeedsParser\r\n}\r\n\r\ninterface PortfoliosPanelState {\r\n    items: Items[]\r\n}\r\n\r\nclass PortfoliosPanel extends React.Component<PortfoliosPanelProps, PortfoliosPanelState> {\r\n    constructor(props: Readonly<PortfoliosPanelProps>) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            items: []\r\n        };\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        this.props.parser.parseUrl(this.props.rssFeedUrl)\r\n            .then(items => this.setState({items}))\r\n    }\r\n\r\n    render(): React.ReactNode {\r\n        return (\r\n            <Section\r\n                id=\"portfolio\"\r\n                hasDivider={true}\r\n                title=\"Portfolio\"\r\n                subtitle=\"Some of my previous works\"\r\n            >\r\n                <div>\r\n                    {\r\n                        this.state.items.map(({content = \"\", link = \"\", title = \"\"}: Items, index: number) =>\r\n                            <div className={this.props.classes.portfolio} key={`${index}_${title}`}>\r\n                                <Portfolio content={content} link={link} title={title}/>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n            </Section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(PortfoliosPanel);","import * as React from \"react\";\r\nimport {createStyles, Theme, withStyles, WithStyles} from \"@material-ui/core\";\r\nimport ContactMetadata from \"../../model/ContactMetadata\";\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    icon: {\r\n        padding: theme.spacing.unit * 2,\r\n    }\r\n});\r\n\r\ninterface ContactIconProps extends WithStyles<typeof styles> {\r\n    metadata: ContactMetadata\r\n}\r\n\r\nfunction ContactIcon(props: ContactIconProps) {\r\n    const {classes, metadata} = props;\r\n    return (\r\n        <div className={classes.icon}>\r\n            <a href={metadata.href} target=\"_blank\">\r\n                <img\r\n                    src={metadata.img.src}\r\n                    alt={metadata.img.alt}/>\r\n            </a>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(ContactIcon);","import * as React from \"react\";\r\nimport {createStyles, Theme, withStyles, WithStyles} from \"@material-ui/core\";\r\n\r\nimport ContactIcon from \"./ContactIcon\";\r\n\r\nimport iconMetadatas from \"../../metadata/contact/icons.json\";\r\nimport badgeMetadatas from \"../../metadata/contact/badges.json\";\r\nimport ContactMetadata from \"../../model/ContactMetadata\";\r\nimport Section from \"../common/Section\";\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n    icons: {\r\n        padding: theme.spacing.unit * 3,\r\n        display: \"flex\",\r\n        flexFlow: \"wrap\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"baseline\"\r\n    },\r\n    badges: {}\r\n});\r\n\r\ninterface ContactPanelProps extends WithStyles<typeof styles> {\r\n}\r\n\r\nfunction ContactPanel(props: ContactPanelProps) {\r\n    const {classes} = props;\r\n    return (\r\n        <Section\r\n            id=\"contact\"\r\n            hasDivider={true}\r\n            title=\"Contact\"\r\n            subtitle=\"Check me out at the following!\"\r\n        >\r\n            <div className={classes.icons}>\r\n                {contactIcons(iconMetadatas)}\r\n            </div>\r\n            <div className={classes.badges}>\r\n                {contactIcons(badgeMetadatas)}\r\n            </div>\r\n        </Section>\r\n    );\r\n}\r\n\r\nfunction contactIcons(metadatas: ContactMetadata[]) {\r\n    return metadatas.map((metadata, i) => (\r\n        <ContactIcon key={`${i.toString()}_${metadata.img.alt}`} metadata={metadata}/>\r\n    ));\r\n}\r\n\r\nexport default withStyles(styles)(ContactPanel);","import React from 'react';\r\nimport RssParser from \"rss-parser\";\r\n\r\nimport CodePenRssFeedsParser from \"../services/portfolio/CodePenRssFeedsParser\";\r\nimport SectionMetadata from \"../model/SectionMetadata\";\r\nimport HomePanel from \"../components/home/HomePanel\";\r\nimport AboutPanel from \"../components/about/AboutPanel\";\r\nimport PortfoliosPanel from \"../components/portfolio/PortfoliosPanel\";\r\nimport ContactPanel from \"../components/contact/ContactPanel\";\r\n\r\nconst parser = new CodePenRssFeedsParser(new RssParser());\r\nconst CORS_PROXY = \"https://cors-anywhere.herokuapp.com\";\r\nconst rssFeedUrl = `${CORS_PROXY}/https://codepen.io/collection/neBvQa/feed`;\r\n\r\nconst sectionConfigs: SectionMetadata[] = [\r\n    {\r\n        name: 'Home',\r\n        component: <HomePanel/>\r\n    },\r\n    {\r\n        name: 'About',\r\n        component: <AboutPanel/>\r\n    },\r\n    {\r\n        name: 'Portfolio',\r\n        component: <PortfoliosPanel parser={parser} rssFeedUrl={rssFeedUrl}/>\r\n    },\r\n    {\r\n        name: 'Contact',\r\n        component: <ContactPanel/>\r\n    },\r\n];\r\n\r\nexport default sectionConfigs;","import {createMuiTheme} from '@material-ui/core/styles';\r\nimport {indigo} from \"@material-ui/core/colors\";\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: indigo,\r\n        secondary: {main: '#e6f0fe',},\r\n    },\r\n    typography: {\r\n        useNextVariants: true,\r\n    },\r\n    overrides: {\r\n        MuiTableRow: {\r\n            root: { //for the body\r\n                height: \"100%\"\r\n            },\r\n            head: { //for the head\r\n                height: \"100%\"\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nexport {theme};","import React, {Component} from 'react';\r\nimport {MuiThemeProvider} from '@material-ui/core/styles';\r\n\r\nimport PortfolioPage from \"./page/PortfolioPage\";\r\nimport sectionConfigs from \"../metadata/sectionConfigs\";\r\nimport {theme} from \"../services/MuiThemeFactory\";\r\n\r\nimport '../css/App.css';\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <MuiThemeProvider theme={theme}>\r\n                <div className=\"App\">\r\n                    <PortfolioPage sectionConfigs={sectionConfigs}/>\r\n                </div>\r\n            </MuiThemeProvider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}